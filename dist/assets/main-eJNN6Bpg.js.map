{"version":3,"file":"main-eJNN6Bpg.js","sources":["../../js/supabase.js","../../main.js"],"sourcesContent":["import { createClient } from '@supabase/supabase-js'\r\n\r\n// Configurazione Supabase - Credenziali aggiornate\r\nconst supabaseUrl = 'https://rixnizceeggdhlridwrj.supabase.co'\r\nconst supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InJpeG5pemNlZWdnZGhscmlkd3JqIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTgwNDY5MzQsImV4cCI6MjA3MzYyMjkzNH0.3YPTcW2_cfS0NCLimGpU2xpp8T5C8LPv-bluQtDB3vQ'\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\r\n\r\n// Classe per gestire l'autenticazione\r\nexport class AuthManager {\r\n  static async signUp(email, password) {\r\n    const { data, error } = await supabase.auth.signUp({\r\n      email,\r\n      password,\r\n      options: {\r\n        emailRedirectTo: window.location.origin\r\n      }\r\n    })\r\n    return { data, error }\r\n  }\r\n\r\n  static async signIn(email, password) {\r\n    const { data, error } = await supabase.auth.signInWithPassword({\r\n      email,\r\n      password\r\n    })\r\n    return { data, error }\r\n  }\r\n\r\n  static async signOut() {\r\n    const { error } = await supabase.auth.signOut()\r\n    return { error }\r\n  }\r\n\r\n  static async getCurrentUser() {\r\n    const { data: { user }, error } = await supabase.auth.getUser()\r\n    return { user, error }\r\n  }\r\n\r\n  static onAuthStateChange(callback) {\r\n    return supabase.auth.onAuthStateChange(callback)\r\n  }\r\n}\r\n\r\n// Classe per gestire le flashcard\r\nexport class FlashcardManager {\r\n  static async createFlashcardSet(name, description, subject, isPublic = false) {\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n    if (!user) throw new Error('Utente non autenticato')\r\n\r\n    const { data, error } = await supabase\r\n      .from('flashcard_sets')\r\n      .insert({\r\n        user_id: user.id,\r\n        name,\r\n        description,\r\n        subject,\r\n        is_public: isPublic\r\n      })\r\n      .select()\r\n      .single()\r\n\r\n    return { data, error }\r\n  }\r\n\r\n  static async addFlashcards(setId, flashcards) {\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n    if (!user) throw new Error('Utente non autenticato')\r\n\r\n    const flashcardsToInsert = flashcards.map((card, index) => ({\r\n      set_id: setId,\r\n      question: card.domanda,\r\n      answer: card.risposta,\r\n      difficulty: card.difficulty || 2,\r\n      order_index: index\r\n    }))\r\n\r\n    const { data, error } = await supabase\r\n      .from('flashcards')\r\n      .insert(flashcardsToInsert)\r\n      .select()\r\n\r\n    // Aggiorna il contatore delle flashcard nel set\r\n    if (!error) {\r\n      await supabase\r\n        .from('flashcard_sets')\r\n        .update({ total_cards: flashcards.length })\r\n        .eq('id', setId)\r\n    }\r\n\r\n    return { data, error }\r\n  }\r\n\r\n  static async getUserFlashcardSets() {\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n    if (!user) throw new Error('Utente non autenticato')\r\n\r\n    const { data, error } = await supabase\r\n      .from('flashcard_sets')\r\n      .select(`\r\n        *,\r\n        flashcards (*)\r\n      `)\r\n      .eq('user_id', user.id)\r\n      .order('created_at', { ascending: false })\r\n\r\n    return { data, error }\r\n  }\r\n\r\n  static async getFlashcardSet(setId) {\r\n    const { data, error } = await supabase\r\n      .from('flashcard_sets')\r\n      .select(`\r\n        *,\r\n        flashcards (*)\r\n      `)\r\n      .eq('id', setId)\r\n      .single()\r\n\r\n    return { data, error }\r\n  }\r\n\r\n  static async deleteFlashcardSet(setId) {\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n    if (!user) throw new Error('Utente non autenticato')\r\n\r\n    const { error } = await supabase\r\n      .from('flashcard_sets')\r\n      .delete()\r\n      .eq('id', setId)\r\n      .eq('user_id', user.id)\r\n\r\n    return { error }\r\n  }\r\n\r\n  static async getPublicFlashcardSets() {\r\n    const { data, error } = await supabase\r\n      .from('flashcard_sets')\r\n      .select(`\r\n        *,\r\n        flashcards (*)\r\n      `)\r\n      .eq('is_public', true)\r\n      .order('created_at', { ascending: false })\r\n\r\n    return { data, error }\r\n  }\r\n}\r\n\r\n// Classe per la ripetizione spaziata avanzata (SM-2 Algorithm + Analytics)\r\nexport class SpacedRepetition {\r\n  static async calculateNext(quality, repetitions = 0, easeFactor = 2.5, interval = 1, userStats = {}) {\r\n    // Ottieni statistiche utente se non fornite\r\n    if (!userStats || Object.keys(userStats).length === 0) {\r\n      userStats = await this.getUserPerformanceStats() || {};\r\n    }\r\n\r\n    if (quality < 3) {\r\n      // Risposta sbagliata - ricomincia con penalità\r\n      const penalty = this.calculatePenalty(userStats);\r\n      return {\r\n        repetitions: 0,\r\n        interval: 1,\r\n        easeFactor: Math.max(1.3, easeFactor - 0.2 - penalty),\r\n        nextReview: new Date(Date.now() + 24 * 60 * 60 * 1000) // Domani\r\n      }\r\n    }\r\n\r\n    // Calcola ease factor con personalizzazione\r\n    const qualityFactor = this.getQualityFactor(quality);\r\n    let newEaseFactor = easeFactor + (0.1 - (5 - quality) * (0.08 + (5 - quality) * 0.02));\r\n    newEaseFactor = Math.max(1.3, Math.min(3.0, newEaseFactor));\r\n    \r\n    // Applica bonus per performance consistenti\r\n    if (userStats.consistency > 0.8) {\r\n      newEaseFactor = Math.min(3.0, newEaseFactor + 0.1);\r\n    }\r\n    \r\n    // Calcola intervallo personalizzato\r\n    let newInterval\r\n    if (repetitions === 0) {\r\n      newInterval = 1\r\n    } else if (repetitions === 1) {\r\n      newInterval = 6\r\n    } else {\r\n      const personalizationFactor = this.getPersonalizationFactor(userStats);\r\n      newInterval = Math.round(interval * newEaseFactor * personalizationFactor)\r\n    }\r\n\r\n    return {\r\n      repetitions: repetitions + 1,\r\n      interval: newInterval,\r\n      easeFactor: newEaseFactor,\r\n      nextReview: new Date(Date.now() + newInterval * 24 * 60 * 60 * 1000),\r\n      difficulty: this.calculateDifficulty(quality, newEaseFactor, userStats)\r\n    }\r\n  }\r\n\r\n  static calculatePenalty(userStats) {\r\n    // Penalità basata su errori recenti\r\n    if (userStats.recentErrors > 3) return 0.3;\r\n    if (userStats.recentErrors > 1) return 0.1;\r\n    return 0;\r\n  }\r\n\r\n  static getPersonalizationFactor(userStats) {\r\n    // Fattore di personalizzazione basato su analytics\r\n    const avgAccuracy = userStats.accuracy || 0.8;\r\n    \r\n    // Utenti con alta accuratezza possono avere intervalli più lunghi\r\n    if (avgAccuracy > 0.9) return 1.2;\r\n    if (avgAccuracy > 0.8) return 1.1;\r\n    if (avgAccuracy < 0.6) return 0.8;\r\n    \r\n    return 1.0;\r\n  }\r\n\r\n  static getQualityFactor(quality) {\r\n    // Fattore qualità per calcolo ease factor\r\n    const factors = {\r\n      5: 0.15,  // Perfetto\r\n      4: 0.1,   // Facile\r\n      3: 0.05,  // Normale\r\n      2: -0.1,  // Difficile\r\n      1: -0.2   // Molto difficile\r\n    };\r\n    return factors[quality] || 0;\r\n  }\r\n\r\n  static calculateDifficulty(quality, easeFactor, userStats) {\r\n    // Calcola difficoltà dinamica basata su performance\r\n    let difficulty = 2; // Default\r\n    \r\n    if (quality >= 4) {\r\n      difficulty = Math.max(1, difficulty - 0.5);\r\n    } else if (quality <= 2) {\r\n      difficulty = Math.min(5, difficulty + 0.5);\r\n    }\r\n    \r\n    // Aggiusta basato su ease factor\r\n    if (easeFactor > 2.5) difficulty = Math.max(1, difficulty - 0.3);\r\n    if (easeFactor < 1.8) difficulty = Math.min(5, difficulty + 0.3);\r\n    \r\n    return Math.round(difficulty * 10) / 10; // Arrotonda a 1 decimale\r\n  }\r\n\r\n  static async getUserPerformanceStats() {\r\n    try {\r\n      const { data: { user } } = await supabase.auth.getUser();\r\n      if (!user) return null;\r\n\r\n      const { data, error } = await supabase\r\n        .from('study_analytics')\r\n        .select('*')\r\n        .eq('user_id', user.id)\r\n        .gte('date', new Date(Date.now() - 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0])\r\n        .order('date', { ascending: false });\r\n\r\n      if (error) throw error;\r\n\r\n      // Calcola statistiche aggregate\r\n      const totalCards = data.reduce((sum, day) => sum + day.cards_studied, 0);\r\n      const totalCorrect = data.reduce((sum, day) => sum + day.correct_answers, 0);\r\n      const totalIncorrect = data.reduce((sum, day) => sum + day.incorrect_answers, 0);\r\n      \r\n      return {\r\n        totalCards,\r\n        accuracy: totalCards > 0 ? totalCorrect / totalCards : 0,\r\n        studyDays: data.length,\r\n        avgCardsPerDay: data.length > 0 ? totalCards / data.length : 0,\r\n        consistency: this.calculateConsistency(data),\r\n        recentErrors: this.calculateRecentErrors(data)\r\n      };\r\n    } catch (error) {\r\n      console.error('Errore nel calcolo statistiche performance:', error);\r\n      return null;\r\n    }\r\n  }\r\n\r\n  static calculateConsistency(data) {\r\n    if (data.length < 3) return 0;\r\n    \r\n    const studyDays = data.filter(day => day.cards_studied > 0).length;\r\n    const totalDays = data.length;\r\n    \r\n    return studyDays / totalDays;\r\n  }\r\n\r\n  static calculateRecentErrors(data) {\r\n    // Conta errori negli ultimi 3 giorni\r\n    const recentData = data.slice(0, 3);\r\n    return recentData.reduce((sum, day) => sum + day.incorrect_answers, 0);\r\n  }\r\n\r\n  static async recordStudySession(cardId, quality, sessionData = {}) {\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n    if (!user) throw new Error('Utente non autenticato')\r\n\r\n    // Ottieni la sessione di studio esistente\r\n    const { data: existingSession } = await supabase\r\n      .from('study_sessions')\r\n      .select('*')\r\n      .eq('user_id', user.id)\r\n      .eq('card_id', cardId)\r\n      .single()\r\n\r\n    // Ottieni statistiche utente per personalizzazione\r\n    const userStats = await this.getUserPerformanceStats()\r\n\r\n    let newData\r\n    if (existingSession) {\r\n      newData = await this.calculateNext(\r\n        quality,\r\n        existingSession.repetitions,\r\n        existingSession.ease_factor,\r\n        existingSession.interval_days,\r\n        userStats\r\n      )\r\n    } else {\r\n      newData = await this.calculateNext(quality, 0, 2.5, 1, userStats)\r\n    }\r\n\r\n    // Salva o aggiorna la sessione di studio\r\n    const sessionRecord = {\r\n      user_id: user.id,\r\n      card_id: cardId,\r\n      quality,\r\n      ease_factor: newData.easeFactor,\r\n      interval_days: newData.interval,\r\n      next_review_date: newData.nextReview.toISOString().split('T')[0],\r\n      repetitions: newData.repetitions,\r\n      studied_at: new Date().toISOString(),\r\n      response_time: sessionData.responseTime || null,\r\n      study_mode: sessionData.mode || 'spaced_repetition',\r\n      device_type: sessionData.deviceType || 'desktop'\r\n    }\r\n\r\n    const { data, error } = await supabase\r\n      .from('study_sessions')\r\n      .upsert(sessionRecord, { \r\n        onConflict: 'user_id,card_id',\r\n        ignoreDuplicates: false \r\n      })\r\n      .select()\r\n\r\n    // Aggiorna analytics utente\r\n    if (!error) {\r\n      await this.updateUserAnalytics(user.id, quality, sessionData)\r\n    }\r\n\r\n    return { data, error }\r\n  }\r\n\r\n  static async updateUserAnalytics(userId, quality, sessionData) {\r\n    try {\r\n      // Aggiorna statistiche giornaliere\r\n      const today = new Date().toISOString().split('T')[0]\r\n      \r\n      const { data: existing, error: fetchError } = await supabase\r\n        .from('study_analytics')\r\n        .select('*')\r\n        .eq('user_id', userId)\r\n        .eq('date', today)\r\n        .single()\r\n      \r\n      if (fetchError && fetchError.code !== 'PGRST116') {\r\n        throw fetchError\r\n      }\r\n      \r\n      const updateData = {\r\n        user_id: userId,\r\n        date: today,\r\n        cards_studied: (existing?.cards_studied || 0) + 1,\r\n        correct_answers: (existing?.correct_answers || 0) + (quality >= 3 ? 1 : 0),\r\n        incorrect_answers: (existing?.incorrect_answers || 0) + (quality < 3 ? 1 : 0),\r\n        study_time_minutes: (existing?.study_time_minutes || 0) + (sessionData.duration || 0),\r\n        updated_at: new Date().toISOString()\r\n      }\r\n      \r\n      if (existing) {\r\n        const { error } = await supabase\r\n          .from('study_analytics')\r\n          .update(updateData)\r\n          .eq('id', existing.id)\r\n        \r\n        if (error) throw error\r\n      } else {\r\n        const { error } = await supabase\r\n          .from('study_analytics')\r\n          .insert(updateData)\r\n        \r\n        if (error) throw error\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('Errore nell\\'aggiornamento analytics:', error)\r\n    }\r\n  }\r\n\r\n  static async getCardsForReview() {\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n    if (!user) throw new Error('Utente non autenticato')\r\n\r\n    const today = new Date().toISOString().split('T')[0]\r\n\r\n    const { data, error } = await supabase\r\n      .from('study_sessions')\r\n      .select(`\r\n        *,\r\n        flashcards (\r\n          *,\r\n          flashcard_sets (*)\r\n        )\r\n      `)\r\n      .eq('user_id', user.id)\r\n      .lte('next_review_date', today)\r\n      .order('next_review_date', { ascending: true })\r\n\r\n    return { data, error }\r\n  }\r\n}\r\n\r\n// Classe per gestire l'API usage\r\nexport class ApiUsageManager {\r\n  static async checkDailyLimit() {\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n    if (!user) throw new Error('Utente non autenticato')\r\n\r\n    const today = new Date().toISOString().split('T')[0]\r\n    const { data, error } = await supabase\r\n      .from('api_usage')\r\n      .select('tokens_used')\r\n      .eq('user_id', user.id)\r\n      .eq('request_date', today)\r\n      .single()\r\n\r\n    return { data, error }\r\n  }\r\n\r\n  static async incrementUsage() {\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n    if (!user) throw new Error('Utente non autenticato')\r\n\r\n    const today = new Date().toISOString().split('T')[0]\r\n    const { data, error } = await supabase\r\n      .from('api_usage')\r\n      .upsert({\r\n        user_id: user.id,\r\n        request_date: today,\r\n        tokens_used: 1\r\n      }, {\r\n        onConflict: 'user_id,request_date',\r\n        ignoreDuplicates: false\r\n      })\r\n      .select()\r\n\r\n    return { data, error }\r\n  }\r\n}\r\n\r\n// Funzione per chiamare l'Edge Function\r\nexport async function generateFlashcardsWithAI(text, difficulty = 'medio', subject = '', cardCount = 10) {\r\n  const { data: { session } } = await supabase.auth.getSession()\r\n  if (!session) throw new Error('Utente non autenticato')\r\n\r\n  const { data, error } = await supabase.functions.invoke('generate-flashcards', {\r\n    body: {\r\n      text,\r\n      difficulty,\r\n      subject,\r\n      cardCount\r\n    },\r\n    headers: {\r\n      Authorization: `Bearer ${session.access_token}`\r\n    }\r\n  })\r\n\r\n  return { data, error }\r\n}\r\n\r\n// Classe per gestire Analytics\r\nexport class AnalyticsManager {\r\n  static async getUserAnalytics(daysBack = 30) {\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n    if (!user) throw new Error('Utente non autenticato')\r\n\r\n    const { data, error } = await supabase.rpc('get_user_analytics', {\r\n      user_uuid: user.id,\r\n      days_back: daysBack\r\n    })\r\n\r\n    return { data, error }\r\n  }\r\n\r\n  // recordStudySession rimossa - usa SpacedRepetition.recordStudySession invece\r\n\r\n  static async updateDailyAnalytics(cardsStudied, correctAnswers, studyTimeMinutes) {\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n    if (!user) throw new Error('Utente non autenticato')\r\n\r\n    const today = new Date().toISOString().split('T')[0]\r\n\r\n    const { data, error } = await supabase\r\n      .from('study_analytics')\r\n      .upsert({\r\n        user_id: user.id,\r\n        date: today,\r\n        cards_studied: cardsStudied,\r\n        correct_answers: correctAnswers,\r\n        incorrect_answers: cardsStudied - correctAnswers,\r\n        study_time_minutes: studyTimeMinutes\r\n      }, {\r\n        onConflict: 'user_id,date',\r\n        ignoreDuplicates: false\r\n      })\r\n      .select()\r\n\r\n    return { data, error }\r\n  }\r\n\r\n  static async getWeeklyProgress() {\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n    if (!user) throw new Error('Utente non autenticato')\r\n\r\n    const { data, error } = await supabase\r\n      .from('study_analytics')\r\n      .select('*')\r\n      .eq('user_id', user.id)\r\n      .gte('date', new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).toISOString().split('T')[0])\r\n      .order('date', { ascending: true })\r\n\r\n    return { data, error }\r\n  }\r\n\r\n  static async getCardsForReview() {\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n    if (!user) throw new Error('Utente non autenticato')\r\n\r\n    const { data, error } = await supabase.rpc('get_cards_for_review', {\r\n      user_uuid: user.id\r\n    })\r\n\r\n    return { data, error }\r\n  }\r\n\r\n  static generateInsights(analytics) {\r\n    const insights = []\r\n\r\n    // Insight 1: Streak\r\n    if (analytics.study_streak > 0) {\r\n      insights.push({\r\n        icon: '🔥',\r\n        title: `Streak di ${analytics.study_streak} giorni!`,\r\n        description: analytics.study_streak >= 7 \r\n          ? 'Fantastico! Mantieni questo ritmo per consolidare le tue conoscenze.'\r\n          : 'Continua così! Ogni giorno di studio conta per il tuo apprendimento.'\r\n      })\r\n    }\r\n\r\n    // Insight 2: Accuratezza\r\n    if (analytics.accuracy_rate > 0) {\r\n      if (analytics.accuracy_rate >= 80) {\r\n        insights.push({\r\n          icon: '🎯',\r\n          title: 'Eccellente accuratezza!',\r\n          description: `Con il ${analytics.accuracy_rate}% di risposte corrette, stai padroneggiando bene i contenuti.`\r\n        })\r\n      } else if (analytics.accuracy_rate < 60) {\r\n        insights.push({\r\n          icon: '📚',\r\n          title: 'Focus sul ripasso',\r\n          description: `La tua accuratezza è del ${analytics.accuracy_rate}%. Considera di ripassare i contenuti più difficili.`\r\n        })\r\n      }\r\n    }\r\n\r\n    // Insight 3: Tempo di studio\r\n    if (analytics.total_study_time > 0) {\r\n      const hours = Math.round(analytics.total_study_time / 60)\r\n      if (hours >= 10) {\r\n        insights.push({\r\n          icon: '⏰',\r\n          title: 'Studio intensivo!',\r\n          description: `Hai studiato ${hours} ore negli ultimi 30 giorni. Ottimo impegno!`\r\n        })\r\n      }\r\n    }\r\n\r\n    // Insight 4: Carte da ripassare\r\n    if (analytics.cards_due_today > 0) {\r\n      insights.push({\r\n        icon: '📅',\r\n        title: 'Carte in attesa',\r\n        description: `Hai ${analytics.cards_due_today} carte da ripassare oggi. Non dimenticare di studiare!`\r\n      })\r\n    }\r\n\r\n    // Insight 5: Progresso generale\r\n    if (analytics.total_cards > 0) {\r\n      insights.push({\r\n        icon: '📈',\r\n        title: 'Progresso costante',\r\n        description: `Hai creato ${analytics.total_cards} flashcard in ${analytics.total_sets} set. Continua a espandere le tue conoscenze!`\r\n      })\r\n    }\r\n\r\n    return insights\r\n  }\r\n}\r\n\r\n// Utility per gestire errori\r\nexport function handleSupabaseError(error) {\r\n  console.error('Supabase Error:', error)\r\n  \r\n  if (error.message.includes('JWT')) {\r\n    return 'Sessione scaduta. Effettua nuovamente l\\'accesso.'\r\n  }\r\n  \r\n  if (error.message.includes('permission')) {\r\n    return 'Non hai i permessi per eseguire questa operazione.'\r\n  }\r\n  \r\n  if (error.message.includes('network')) {\r\n    return 'Errore di connessione. Verifica la tua connessione internet.'\r\n  }\r\n  \r\n  return error.message || 'Si è verificato un errore imprevisto.'\r\n}\r\n","// Entry point principale per Vite\r\nimport { \r\n    AuthManager, \r\n    FlashcardManager, \r\n    SpacedRepetition, \r\n    AnalyticsManager,\r\n    generateFlashcardsWithAI,\r\n    handleSupabaseError \r\n} from './js/supabase.js';\r\n\r\n// Grafici gestiti con CSS semplici - Recharts rimosso per ridurre bundle size\r\n\r\n// Configurazione globale\r\nconst CONFIG = {\r\n    DEFAULT_API_URL: 'https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent',\r\n    // API Key rimosso per sicurezza - usa Edge Function Supabase\r\n    STORAGE_KEY: 'flashcard_api_key',\r\n    THEME_KEY: 'flashcard_theme',\r\n    SAVED_SETS_KEY: 'flashcard_saved_sets'\r\n};\r\n\r\n// Stato dell'applicazione\r\nlet appState = {\r\n    flashcards: [],\r\n    currentIndex: 0,\r\n    isLoading: false,\r\n    apiKey: null,\r\n    useCustomApi: false,\r\n    answerRevealed: false,\r\n    user: null,\r\n    studyMode: false,\r\n    studyCards: [],\r\n    currentStudyIndex: 0,\r\n    cardsStudiedToday: 0,\r\n    studyStartTime: null,\r\n    selectedStudyMode: null,\r\n    quizData: [],\r\n    matchingData: [],\r\n    memoryData: [],\r\n    speedData: [],\r\n    quizScore: 0,\r\n    matchingScore: 0,\r\n    memoryScore: 0,\r\n    speedScore: 0\r\n};\r\n\r\n// Elementi DOM\r\nconst elements = {\r\n    // Autenticazione\r\n    authSection: document.getElementById('authSection'),\r\n    loginForm: document.getElementById('loginForm'),\r\n    userInfo: document.getElementById('userInfo'),\r\n    emailInput: document.getElementById('emailInput'),\r\n    passwordInput: document.getElementById('passwordInput'),\r\n    loginBtn: document.getElementById('loginBtn'),\r\n    signupBtn: document.getElementById('signupBtn'),\r\n    logoutBtn: document.getElementById('logoutBtn'),\r\n    userEmail: document.getElementById('userEmail'),\r\n    userStats: document.getElementById('userStats'),\r\n    studyModeBtn: document.getElementById('studyModeBtn'),\r\n    analyticsBtn: document.getElementById('analyticsBtn'),\r\n    \r\n    // Input\r\n    textInput: document.getElementById('textInput'),\r\n    pdfInput: document.getElementById('pdfInput'),\r\n    pdfInfo: document.getElementById('pdfInfo'),\r\n    apiChoiceRadios: document.querySelectorAll('input[name=\"apiChoice\"]'),\r\n    customApiSection: document.getElementById('customApiSection'),\r\n    apiKeyInput: document.getElementById('apiKeyInput'),\r\n    saveApiKeyBtn: document.getElementById('saveApiKey'),\r\n    generateBtn: document.getElementById('generateBtn'),\r\n    \r\n    // Flashcard\r\n    flashcardSection: document.getElementById('flashcardSection'),\r\n    flashcardCounter: document.getElementById('flashcardCounter'),\r\n    currentCard: document.getElementById('currentCard'),\r\n    totalCards: document.getElementById('totalCards'),\r\n    questionText: document.getElementById('questionText'),\r\n    answerText: document.getElementById('answerText'),\r\n    answerSection: document.getElementById('answerSection'),\r\n    revealAnswerBtn: document.getElementById('revealAnswerBtn'),\r\n    hideAnswerBtn: document.getElementById('hideAnswerBtn'),\r\n    prevBtn: document.getElementById('prevBtn'),\r\n    nextBtn: document.getElementById('nextBtn'),\r\n    saveSetBtn: document.getElementById('saveSetBtn'),\r\n    exportBtn: document.getElementById('exportBtn'),\r\n    copyBtn: document.getElementById('copyBtn'),\r\n    \r\n    // Analytics\r\n    analyticsSection: document.getElementById('analyticsSection'),\r\n    analyticsTimeframe: document.getElementById('analyticsTimeframe'),\r\n    refreshAnalytics: document.getElementById('refreshAnalytics'),\r\n    totalSets: document.getElementById('totalSets'),\r\n    totalCards: document.getElementById('totalCards'),\r\n    studyStreak: document.getElementById('studyStreak'),\r\n    accuracyRate: document.getElementById('accuracyRate'),\r\n    totalStudyTime: document.getElementById('totalStudyTime'),\r\n    cardsDueToday: document.getElementById('cardsDueToday'),\r\n    weeklyProgressChart: document.getElementById('weeklyProgressChart'),\r\n    accuracyChart: document.getElementById('accuracyChart'),\r\n    insightsList: document.getElementById('insightsList'),\r\n    \r\n    // Studio\r\n    studySection: document.getElementById('studySection'),\r\n    startStudyBtn: document.getElementById('startStudyBtn'),\r\n    stopStudyBtn: document.getElementById('stopStudyBtn'),\r\n    cardsDue: document.getElementById('cardsDue'),\r\n    cardsStudied: document.getElementById('cardsStudied'),\r\n    currentStudyMode: document.getElementById('currentStudyMode'),\r\n    studyCard: document.getElementById('studyCard'),\r\n    studyProgress: document.getElementById('studyProgress'),\r\n    studyProgressText: document.getElementById('studyProgressText'),\r\n    studyQuestionText: document.getElementById('studyQuestionText'),\r\n    studyRevealBtn: document.getElementById('studyRevealBtn'),\r\n    studyAnswer: document.getElementById('studyAnswer'),\r\n    studyAnswerText: document.getElementById('studyAnswerText'),\r\n    \r\n    // Modalità Studio\r\n    studyModeCards: document.querySelectorAll('.study-mode-card'),\r\n    studyModeSelector: document.querySelector('.study-mode-selector'),\r\n    \r\n    // Quiz Mode\r\n    quizMode: document.getElementById('quizMode'),\r\n    quizQuestion: document.getElementById('quizQuestionText'),\r\n    quizOptions: document.getElementById('quizOptions'),\r\n    quizFeedback: document.getElementById('quizFeedback'),\r\n    feedbackIcon: document.getElementById('feedbackIcon'),\r\n    feedbackText: document.getElementById('feedbackText'),\r\n    correctAnswer: document.getElementById('correctAnswer'),\r\n    nextQuizBtn: document.getElementById('nextQuizBtn'),\r\n    quizProgress: document.getElementById('quizProgress'),\r\n    quizProgressText: document.getElementById('quizProgressText'),\r\n    \r\n    // Matching Mode\r\n    matchingMode: document.getElementById('matchingMode'),\r\n    matchingGrid: document.getElementById('matchingGrid'),\r\n    matchingFeedback: document.getElementById('matchingFeedback'),\r\n    matchingFeedbackIcon: document.getElementById('matchingFeedbackIcon'),\r\n    matchingFeedbackText: document.getElementById('matchingFeedbackText'),\r\n    matchingProgress: document.getElementById('matchingProgress'),\r\n    matchingProgressText: document.getElementById('matchingProgressText'),\r\n    \r\n    // Memory Mode\r\n    memoryMode: document.getElementById('memoryMode'),\r\n    memoryGrid: document.getElementById('memoryGrid'),\r\n    memoryAttempts: document.getElementById('memoryAttempts'),\r\n    memoryPairs: document.getElementById('memoryPairs'),\r\n    memoryProgress: document.getElementById('memoryProgress'),\r\n    memoryProgressText: document.getElementById('memoryProgressText'),\r\n    \r\n    // Speed Mode\r\n    speedMode: document.getElementById('speedMode'),\r\n    speedQuestion: document.getElementById('speedQuestionText'),\r\n    speedAnswer: document.getElementById('speedAnswerText'),\r\n    speedTimer: document.getElementById('speedTimer'),\r\n    revealSpeedAnswer: document.getElementById('revealSpeedAnswer'),\r\n    speedNext: document.getElementById('speedNext'),\r\n    speedProgress: document.getElementById('speedProgress'),\r\n    speedProgressText: document.getElementById('speedProgressText'),\r\n    \r\n    // Flashcard salvate\r\n    savedFlashcardsSection: document.getElementById('savedFlashcardsSection'),\r\n    savedSetsGrid: document.getElementById('savedSetsGrid'),\r\n    emptySavedSets: document.getElementById('emptySavedSets'),\r\n    refreshSetsBtn: document.getElementById('refreshSetsBtn'),\r\n    clearAllBtn: document.getElementById('clearAllBtn'),\r\n    \r\n    // Modal\r\n    exportModal: document.getElementById('exportModal'),\r\n    exportJson: document.getElementById('exportJson'),\r\n    exportCsv: document.getElementById('exportCsv'),\r\n    closeModal: document.getElementById('closeModal'),\r\n    saveSetModal: document.getElementById('saveSetModal'),\r\n    setNameInput: document.getElementById('setNameInput'),\r\n    confirmSaveBtn: document.getElementById('confirmSaveBtn'),\r\n    cancelSaveBtn: document.getElementById('cancelSaveBtn')\r\n};\r\n\r\n// Inizializzazione\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    initializeApp();\r\n    setupEventListeners();\r\n    loadSavedData();\r\n    checkAuthState();\r\n});\r\n\r\n// Inizializzazione dell'app\r\nfunction initializeApp() {\r\n    // Configura pdf.js con gestione errori\r\n    try {\r\n        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.11.174/pdf.worker.min.js';\r\n    } catch (error) {\r\n        console.warn('PDF.js non disponibile:', error);\r\n    }\r\n    \r\n    // Aggiungi toggle tema\r\n    addThemeToggle();\r\n    \r\n    console.log('Flashcard Generator v2.0 inizializzato con Supabase');\r\n}\r\n\r\n// Setup degli event listeners\r\nfunction setupEventListeners() {\r\n    // Autenticazione\r\n    elements.loginBtn.addEventListener('click', handleLogin);\r\n    elements.signupBtn.addEventListener('click', handleSignup);\r\n    elements.logoutBtn.addEventListener('click', handleLogout);\r\n    elements.studyModeBtn.addEventListener('click', showStudyMode);\r\n    elements.analyticsBtn.addEventListener('click', showAnalyticsDashboard);\r\n    \r\n    // Input text\r\n    elements.textInput.addEventListener('input', handleTextInput);\r\n    \r\n    // File PDF\r\n    elements.pdfInput.addEventListener('change', handlePdfUpload);\r\n    \r\n    // API choice\r\n    elements.apiChoiceRadios.forEach(radio => {\r\n        radio.addEventListener('change', handleApiChoiceChange);\r\n    });\r\n    \r\n    // Salva API key\r\n    elements.saveApiKeyBtn.addEventListener('click', saveApiKey);\r\n    \r\n    // Genera flashcard\r\n    elements.generateBtn.addEventListener('click', generateFlashcards);\r\n    \r\n    // Rivelare risposta\r\n    elements.revealAnswerBtn.addEventListener('click', toggleAnswer);\r\n    elements.hideAnswerBtn.addEventListener('click', hideAnswer);\r\n    \r\n    // Navigazione flashcard\r\n    elements.prevBtn.addEventListener('click', showPreviousCard);\r\n    elements.nextBtn.addEventListener('click', showNextCard);\r\n    \r\n    // Salvataggio e esportazione\r\n    elements.saveSetBtn.addEventListener('click', showSaveSetModal);\r\n    elements.exportBtn.addEventListener('click', showExportModal);\r\n    elements.copyBtn.addEventListener('click', copyFlashcards);\r\n    elements.exportJson.addEventListener('click', () => exportFlashcards('json'));\r\n    elements.exportCsv.addEventListener('click', () => exportFlashcards('csv'));\r\n    elements.closeModal.addEventListener('click', hideExportModal);\r\n    \r\n    // Modal salvataggio set\r\n    elements.confirmSaveBtn.addEventListener('click', saveFlashcardSet);\r\n    elements.cancelSaveBtn.addEventListener('click', hideSaveSetModal);\r\n    elements.setNameInput.addEventListener('keypress', (e) => {\r\n        if (e.key === 'Enter') {\r\n            saveFlashcardSet();\r\n        }\r\n    });\r\n    \r\n    // Analytics\r\n    elements.analyticsTimeframe.addEventListener('change', loadAnalytics);\r\n    elements.refreshAnalytics.addEventListener('click', loadAnalytics);\r\n    \r\n    // Studio\r\n    elements.startStudyBtn.addEventListener('click', startStudyMode);\r\n    elements.stopStudyBtn.addEventListener('click', stopStudyMode);\r\n    elements.studyRevealBtn.addEventListener('click', revealStudyAnswer);\r\n    \r\n    // Rating buttons\r\n    document.addEventListener('click', (e) => {\r\n        if (e.target.classList.contains('rating-btn')) {\r\n            handleStudyRating(parseInt(e.target.dataset.quality));\r\n        }\r\n    });\r\n    \r\n    // Modalità Studio\r\n    elements.studyModeCards.forEach(card => {\r\n        card.addEventListener('click', selectStudyMode);\r\n    });\r\n    \r\n    // Quiz Mode\r\n    elements.nextQuizBtn.addEventListener('click', nextQuizQuestion);\r\n    \r\n    // Speed Mode\r\n    elements.revealSpeedAnswer.addEventListener('click', revealSpeedAnswer);\r\n    elements.speedNext.addEventListener('click', nextSpeedCard);\r\n    \r\n    // Gestione flashcard salvate\r\n    elements.refreshSetsBtn.addEventListener('click', loadSavedFlashcards);\r\n    elements.clearAllBtn.addEventListener('click', clearAllSavedSets);\r\n    \r\n    // Chiudi modal cliccando fuori\r\n    elements.exportModal.addEventListener('click', (e) => {\r\n        if (e.target === elements.exportModal) {\r\n            hideExportModal();\r\n        }\r\n    });\r\n    \r\n    elements.saveSetModal.addEventListener('click', (e) => {\r\n        if (e.target === elements.saveSetModal) {\r\n            hideSaveSetModal();\r\n        }\r\n    });\r\n}\r\n\r\n// Gestione autenticazione\r\nasync function checkAuthState() {\r\n    const { user } = await AuthManager.getCurrentUser();\r\n    if (user) {\r\n        appState.user = user;\r\n        showUserInfo();\r\n        loadSavedFlashcards();\r\n        updateStudyStats();\r\n    } else {\r\n        showLoginForm();\r\n    }\r\n}\r\n\r\nfunction showLoginForm() {\r\n    elements.loginForm.classList.remove('hidden');\r\n    elements.userInfo.classList.add('hidden');\r\n    appState.user = null;\r\n    \r\n    // Nascondi pulsanti per utenti non loggati\r\n    elements.studyModeBtn.classList.add('hidden');\r\n    elements.analyticsBtn.classList.add('hidden');\r\n    \r\n    // Nascondi sezioni che richiedono autenticazione\r\n    elements.studySection.classList.add('hidden');\r\n    elements.analyticsSection.classList.add('hidden');\r\n    \r\n    // Ripristina sezione API per utenti non loggati\r\n    const apiSection = document.querySelector('.api-section');\r\n    if (apiSection) {\r\n        apiSection.style.opacity = '1';\r\n        apiSection.style.pointerEvents = 'auto';\r\n        // Rimuovi tooltip se presente\r\n        const tooltip = apiSection.querySelector('.user-logged-tooltip');\r\n        if (tooltip) {\r\n            tooltip.remove();\r\n        }\r\n    }\r\n}\r\n\r\nfunction showUserInfo() {\r\n    elements.loginForm.classList.add('hidden');\r\n    elements.userInfo.classList.remove('hidden');\r\n    elements.userEmail.textContent = appState.user.email;\r\n    updateUserStats();\r\n    \r\n    // Mostra pulsanti per utenti loggati\r\n    elements.studyModeBtn.classList.remove('hidden');\r\n    elements.analyticsBtn.classList.remove('hidden');\r\n    \r\n    // Nascondi sezione API personalizzata per utenti loggati\r\n    const apiSection = document.querySelector('.api-section');\r\n    if (apiSection) {\r\n        apiSection.style.opacity = '0.6';\r\n        apiSection.style.pointerEvents = 'none';\r\n        // Aggiungi tooltip informativo\r\n        if (!apiSection.querySelector('.user-logged-tooltip')) {\r\n            const tooltip = document.createElement('div');\r\n            tooltip.className = 'user-logged-tooltip';\r\n            tooltip.innerHTML = '💡 Gli utenti loggati usano il sistema sicuro integrato';\r\n            tooltip.style.cssText = 'font-size: 12px; color: #666; margin-top: 5px; text-align: center;';\r\n            apiSection.appendChild(tooltip);\r\n        }\r\n    }\r\n}\r\n\r\nasync function updateUserStats() {\r\n    if (!appState.user) return;\r\n    \r\n    try {\r\n        const { data, error } = await AnalyticsManager.getUserAnalytics(30);\r\n        \r\n        if (error) throw error;\r\n        \r\n        const stats = data || {};\r\n        elements.userStats.textContent = `${stats.total_sets || 0} set • ${stats.total_cards || 0} carte`;\r\n    } catch (error) {\r\n        console.error('Errore nel caricamento delle statistiche:', error);\r\n    }\r\n}\r\n\r\nasync function handleLogin() {\r\n    const email = elements.emailInput.value.trim();\r\n    const password = elements.passwordInput.value.trim();\r\n    \r\n    if (!email || !password) {\r\n        showError('Inserisci email e password.');\r\n        return;\r\n    }\r\n    \r\n    try {\r\n        showLoading(true);\r\n        const { data, error } = await AuthManager.signIn(email, password);\r\n        \r\n        if (error) throw error;\r\n        \r\n        appState.user = data.user;\r\n        showUserInfo();\r\n        loadSavedFlashcards();\r\n        updateStudyStats();\r\n        showSuccess('Accesso effettuato con successo!');\r\n        \r\n        // Pulisci i campi\r\n        elements.emailInput.value = '';\r\n        elements.passwordInput.value = '';\r\n        \r\n    } catch (error) {\r\n        showError(handleSupabaseError(error));\r\n    } finally {\r\n        showLoading(false);\r\n    }\r\n}\r\n\r\nasync function handleSignup() {\r\n    const email = elements.emailInput.value.trim();\r\n    const password = elements.passwordInput.value.trim();\r\n    \r\n    if (!email || !password) {\r\n        showError('Inserisci email e password.');\r\n        return;\r\n    }\r\n    \r\n    if (password.length < 6) {\r\n        showError('La password deve essere di almeno 6 caratteri.');\r\n        return;\r\n    }\r\n    \r\n    try {\r\n        showLoading(true);\r\n        const { data, error } = await AuthManager.signUp(email, password);\r\n        \r\n        if (error) throw error;\r\n        \r\n        showSuccess('Registrazione completata! Controlla la tua email per confermare l\\'account.');\r\n        \r\n        // Pulisci i campi\r\n        elements.emailInput.value = '';\r\n        elements.passwordInput.value = '';\r\n        \r\n    } catch (error) {\r\n        showError(handleSupabaseError(error));\r\n    } finally {\r\n        showLoading(false);\r\n    }\r\n}\r\n\r\nasync function handleLogout() {\r\n    try {\r\n        const { error } = await AuthManager.signOut();\r\n        if (error) throw error;\r\n        \r\n        appState.user = null;\r\n        showLoginForm();\r\n        showSuccess('Logout effettuato con successo!');\r\n        \r\n    } catch (error) {\r\n        showError(handleSupabaseError(error));\r\n    }\r\n}\r\n\r\n// Gestione input testo\r\nfunction handleTextInput() {\r\n    const text = elements.textInput.value.trim();\r\n    if (text) {\r\n        elements.pdfInput.value = '';\r\n        elements.pdfInfo.classList.add('hidden');\r\n    }\r\n}\r\n\r\n// Gestione upload PDF\r\nasync function handlePdfUpload(event) {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n    \r\n    if (file.type !== 'application/pdf') {\r\n        showError('Per favore seleziona un file PDF valido.');\r\n        return;\r\n    }\r\n    \r\n    try {\r\n        showLoading(true);\r\n        const text = await extractTextFromPdf(file);\r\n        elements.textInput.value = text;\r\n        elements.pdfInfo.textContent = `PDF caricato: ${file.name} (${(file.size / 1024).toFixed(1)} KB)`;\r\n        elements.pdfInfo.classList.remove('hidden');\r\n    } catch (error) {\r\n        showError('Errore nella lettura del PDF: ' + error.message);\r\n    } finally {\r\n        showLoading(false);\r\n    }\r\n}\r\n\r\n// Estrazione testo da PDF\r\nasync function extractTextFromPdf(file) {\r\n    return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.onload = async function(e) {\r\n            try {\r\n                const typedarray = new Uint8Array(e.target.result);\r\n                const pdf = await pdfjsLib.getDocument(typedarray).promise;\r\n                let fullText = '';\r\n                \r\n                for (let i = 1; i <= pdf.numPages; i++) {\r\n                    const page = await pdf.getPage(i);\r\n                    const textContent = await page.getTextContent();\r\n                    const pageText = textContent.items.map(item => item.str).join(' ');\r\n                    fullText += pageText + '\\n';\r\n                }\r\n                \r\n                resolve(fullText.trim());\r\n            } catch (error) {\r\n                reject(error);\r\n            }\r\n        };\r\n        reader.onerror = reject;\r\n        reader.readAsArrayBuffer(file);\r\n    });\r\n}\r\n\r\n// Gestione cambio scelta API\r\nfunction handleApiChoiceChange(event) {\r\n    const useCustom = event.target.value === 'custom';\r\n    appState.useCustomApi = useCustom;\r\n    \r\n    // Se l'utente è loggato, non permettere l'uso di API personalizzate\r\n    if (appState.user && useCustom) {\r\n        showError('Gli utenti loggati usano il sistema sicuro integrato. API personalizzata non necessaria.');\r\n        // Torna alla scelta default\r\n        document.querySelector('input[name=\"apiChoice\"][value=\"default\"]').checked = true;\r\n        appState.useCustomApi = false;\r\n        return;\r\n    }\r\n    \r\n    if (useCustom) {\r\n        elements.customApiSection.classList.remove('hidden');\r\n        elements.apiKeyInput.focus();\r\n    } else {\r\n        elements.customApiSection.classList.add('hidden');\r\n    }\r\n}\r\n\r\n// Salva API key\r\nfunction saveApiKey() {\r\n    const apiKey = elements.apiKeyInput.value.trim();\r\n    if (!apiKey) {\r\n        showError('Inserisci una API key valida.');\r\n        return;\r\n    }\r\n    \r\n    appState.apiKey = apiKey;\r\n    localStorage.setItem(CONFIG.STORAGE_KEY, apiKey);\r\n    showSuccess('API key salvata con successo!');\r\n}\r\n\r\n// Carica dati salvati\r\nfunction loadSavedData() {\r\n    // Carica API key\r\n    const savedApiKey = localStorage.getItem(CONFIG.STORAGE_KEY);\r\n    if (savedApiKey) {\r\n        appState.apiKey = savedApiKey;\r\n        elements.apiKeyInput.value = savedApiKey;\r\n    }\r\n    \r\n    // Carica tema\r\n    const savedTheme = localStorage.getItem(CONFIG.THEME_KEY) || 'light';\r\n    document.documentElement.setAttribute('data-theme', savedTheme);\r\n}\r\n\r\n// Genera flashcard\r\nasync function generateFlashcards() {\r\n    const text = elements.textInput.value.trim();\r\n    if (!text) {\r\n        showError('Inserisci del testo o carica un PDF per generare le flashcard.');\r\n        return;\r\n    }\r\n    \r\n    // Verifica API key se si usa API personalizzata\r\n    if (appState.useCustomApi && !appState.apiKey) {\r\n        showError('Inserisci la tua API key per continuare.');\r\n        return;\r\n    }\r\n    \r\n    try {\r\n        showLoading(true, 'Analisi del testo in corso...');\r\n        let flashcards;\r\n        \r\n        if (appState.user) {\r\n            // Usa sempre Edge Function per utenti autenticati (sicuro)\r\n            showLoading(true, 'Generazione AI in corso...');\r\n            try {\r\n                const { data, error } = await generateFlashcardsWithAI(text, 'medio', '', 10);\r\n                if (error) throw error;\r\n                flashcards = data.flashcards;\r\n            } catch (edgeError) {\r\n                console.warn('Edge Function non disponibile, fallback a API diretta:', edgeError);\r\n                // Fallback a API diretta se Edge Function non funziona\r\n                if (appState.apiKey) {\r\n                    try {\r\n                        flashcards = await callApi(text);\r\n                    } catch (apiError) {\r\n                        throw new Error(`Edge Function e API diretta non disponibili: ${apiError.message}`);\r\n                    }\r\n                } else {\r\n                    throw new Error('Edge Function non disponibile e nessuna API key fornita. Configura una API key per il fallback.');\r\n                }\r\n            }\r\n        } else if (appState.useCustomApi && appState.apiKey) {\r\n            // Solo per utenti non autenticati con API key personale\r\n            showLoading(true, 'Chiamata API in corso...');\r\n            flashcards = await callApi(text);\r\n        } else {\r\n            throw new Error('Devi effettuare l\\'accesso o fornire una API key per generare flashcard.');\r\n        }\r\n        \r\n        showLoading(true, 'Validazione flashcard...');\r\n        \r\n        if (flashcards && flashcards.length > 0) {\r\n            appState.flashcards = flashcards;\r\n            appState.currentIndex = 0;\r\n            appState.answerRevealed = false;\r\n            showFlashcardSection();\r\n            updateFlashcardDisplay();\r\n            showSuccess(`Generate ${flashcards.length} flashcard con successo!`);\r\n        } else {\r\n            showError('Nessuna flashcard generata. Riprova con un testo diverso.');\r\n        }\r\n    } catch (error) {\r\n        showError('Errore nella generazione delle flashcard: ' + error.message);\r\n    } finally {\r\n        showLoading(false);\r\n    }\r\n}\r\n\r\n// Chiamata API (fallback)\r\nasync function callApi(text) {\r\n    const apiKey = appState.apiKey;\r\n    const apiUrl = CONFIG.DEFAULT_API_URL;\r\n    \r\n    if (!apiKey) {\r\n        throw new Error('API Key non configurata per il fallback');\r\n    }\r\n    \r\n    const prompt = `Genera flashcard con domande e risposte chiare e concise basate sul seguente testo. \r\n    Rispondi SOLO con un array JSON di oggetti con questa struttura esatta:\r\n    [\r\n        {\"domanda\": \"testo della domanda\", \"risposta\": \"testo della risposta\"},\r\n        {\"domanda\": \"testo della domanda\", \"risposta\": \"testo della risposta\"}\r\n    ]\r\n    \r\n    Testo da elaborare:\r\n    ${text}`;\r\n    \r\n    const requestBody = {\r\n        contents: [{\r\n            parts: [{\r\n                text: prompt\r\n            }]\r\n        }],\r\n        generationConfig: {\r\n            temperature: 0.7,\r\n            topK: 40,\r\n            topP: 0.95,\r\n            maxOutputTokens: 2048,\r\n        }\r\n    };\r\n    \r\n    const response = await fetch(`${apiUrl}?key=${apiKey}`, {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(requestBody)\r\n    });\r\n    \r\n    if (!response.ok) {\r\n        const errorData = await response.json();\r\n        throw new Error(`Errore API: ${errorData.error?.message || response.statusText}`);\r\n    }\r\n    \r\n    const data = await response.json();\r\n    const generatedText = data.candidates[0].content.parts[0].text;\r\n    \r\n    // Estrai JSON dalla risposta\r\n    const jsonMatch = generatedText.match(/\\[[\\s\\S]*\\]/);\r\n    if (!jsonMatch) {\r\n        throw new Error('Formato di risposta non valido dall\\'API');\r\n    }\r\n    \r\n    try {\r\n        const flashcards = JSON.parse(jsonMatch[0]);\r\n        return flashcards.filter(card => card.domanda && card.risposta);\r\n    } catch (error) {\r\n        throw new Error('Errore nel parsing della risposta JSON');\r\n    }\r\n}\r\n\r\n// Mostra sezione flashcard\r\nfunction showFlashcardSection() {\r\n    elements.flashcardSection.classList.remove('hidden');\r\n    elements.flashcardSection.scrollIntoView({ behavior: 'smooth' });\r\n}\r\n\r\n// Aggiorna display flashcard\r\nfunction updateFlashcardDisplay() {\r\n    if (appState.flashcards.length === 0) return;\r\n    \r\n    const currentCard = appState.flashcards[appState.currentIndex];\r\n    elements.questionText.textContent = currentCard.domanda;\r\n    elements.answerText.textContent = currentCard.risposta;\r\n    \r\n    elements.currentCard.textContent = appState.currentIndex + 1;\r\n    elements.totalCards.textContent = appState.flashcards.length;\r\n    \r\n    // Reset stato risposta e animazione flip\r\n    appState.answerRevealed = false;\r\n    const flashcard = document.getElementById('flashcard');\r\n    flashcard.classList.remove('flipped');\r\n    \r\n    // Aggiorna stato bottoni navigazione\r\n    elements.prevBtn.disabled = appState.currentIndex === 0;\r\n    elements.nextBtn.disabled = appState.currentIndex === appState.flashcards.length - 1;\r\n}\r\n\r\n// Toggle risposta con animazione flip\r\nfunction toggleAnswer() {\r\n    appState.answerRevealed = !appState.answerRevealed;\r\n    const flashcard = document.getElementById('flashcard');\r\n    \r\n    if (appState.answerRevealed) {\r\n        flashcard.classList.add('flipped');\r\n    } else {\r\n        flashcard.classList.remove('flipped');\r\n    }\r\n}\r\n\r\n// Funzione per nascondere risposta (pulsante sul retro)\r\nfunction hideAnswer() {\r\n    appState.answerRevealed = false;\r\n    const flashcard = document.getElementById('flashcard');\r\n    flashcard.classList.remove('flipped');\r\n}\r\n\r\n// Mostra flashcard precedente\r\nfunction showPreviousCard() {\r\n    if (appState.currentIndex > 0) {\r\n        appState.currentIndex--;\r\n        updateFlashcardDisplay();\r\n    }\r\n}\r\n\r\n// Mostra flashcard successiva\r\nfunction showNextCard() {\r\n    if (appState.currentIndex < appState.flashcards.length - 1) {\r\n        appState.currentIndex++;\r\n        updateFlashcardDisplay();\r\n    }\r\n}\r\n\r\n// Mostra modal salvataggio set\r\nfunction showSaveSetModal() {\r\n    if (appState.flashcards.length === 0) {\r\n        showError('Nessuna flashcard da salvare.');\r\n        return;\r\n    }\r\n    \r\n    if (!appState.user) {\r\n        showError('Devi effettuare l\\'accesso per salvare le flashcard.');\r\n        return;\r\n    }\r\n    \r\n    elements.setNameInput.value = '';\r\n    elements.saveSetModal.classList.remove('hidden');\r\n    elements.setNameInput.focus();\r\n}\r\n\r\n// Nascondi modal salvataggio set\r\nfunction hideSaveSetModal() {\r\n    elements.saveSetModal.classList.add('hidden');\r\n}\r\n\r\n// Salva set di flashcard\r\nasync function saveFlashcardSet() {\r\n    const setName = elements.setNameInput.value.trim();\r\n    if (!setName) {\r\n        showError('Inserisci un nome per il set di flashcard.');\r\n        return;\r\n    }\r\n    \r\n    if (appState.flashcards.length === 0) {\r\n        showError('Nessuna flashcard da salvare.');\r\n        return;\r\n    }\r\n    \r\n    if (!appState.user) {\r\n        showError('Devi effettuare l\\'accesso per salvare le flashcard.');\r\n        return;\r\n    }\r\n    \r\n    try {\r\n        showLoading(true);\r\n        \r\n        // Crea il set\r\n        const { data: setData, error: setError } = await FlashcardManager.createFlashcardSet(\r\n            setName,\r\n            `Set generato il ${new Date().toLocaleDateString('it-IT')}`,\r\n            'Generale'\r\n        );\r\n        \r\n        if (setError) throw setError;\r\n        \r\n        // Aggiungi le flashcard\r\n        const { error: cardsError } = await FlashcardManager.addFlashcards(\r\n            setData.id,\r\n            appState.flashcards\r\n        );\r\n        \r\n        if (cardsError) throw cardsError;\r\n        \r\n        hideSaveSetModal();\r\n        showSuccess(`Set \"${setName}\" salvato con successo!`);\r\n        loadSavedFlashcards();\r\n        updateUserStats();\r\n        \r\n    } catch (error) {\r\n        showError(handleSupabaseError(error));\r\n    } finally {\r\n        showLoading(false);\r\n    }\r\n}\r\n\r\n// Carica flashcard salvate\r\nasync function loadSavedFlashcards() {\r\n    if (!appState.user) {\r\n        elements.emptySavedSets.classList.remove('hidden');\r\n        elements.savedSetsGrid.classList.add('hidden');\r\n        return;\r\n    }\r\n    \r\n    try {\r\n        const { data, error } = await FlashcardManager.getUserFlashcardSets();\r\n        if (error) throw error;\r\n        \r\n        renderSavedSets(data || []);\r\n        \r\n    } catch (error) {\r\n        console.error('Errore nel caricamento delle flashcard salvate:', error);\r\n        showError(handleSupabaseError(error));\r\n    }\r\n}\r\n\r\n// Renderizza i set salvati\r\nfunction renderSavedSets(sets) {\r\n    if (sets.length === 0) {\r\n        elements.emptySavedSets.classList.remove('hidden');\r\n        elements.savedSetsGrid.classList.add('hidden');\r\n        return;\r\n    }\r\n    \r\n    elements.emptySavedSets.classList.add('hidden');\r\n    elements.savedSetsGrid.classList.remove('hidden');\r\n    \r\n    elements.savedSetsGrid.innerHTML = sets.map((set) => `\r\n        <div class=\"saved-set-card\" data-set-id=\"${set.id}\">\r\n            <div class=\"saved-set-title\">${set.name}</div>\r\n            <div class=\"saved-set-info\">\r\n                ${set.total_cards} flashcard • Creato il ${new Date(set.created_at).toLocaleDateString('it-IT')}\r\n                ${set.is_public ? ' • 🌐 Pubblico' : ''}\r\n            </div>\r\n            <div class=\"saved-set-actions\">\r\n                <button class=\"btn-secondary\" data-action=\"load\" data-set-id=\"${set.id}\">📖 Apri</button>\r\n                <button class=\"btn-primary\" data-action=\"study\" data-set-id=\"${set.id}\">🎯 Studia</button>\r\n                <button class=\"btn-secondary\" data-action=\"delete\" data-set-id=\"${set.id}\">🗑️ Elimina</button>\r\n            </div>\r\n        </div>\r\n    `).join('');\r\n    \r\n    // Aggiungi event listeners per i pulsanti\r\n    elements.savedSetsGrid.querySelectorAll('[data-action=\"load\"]').forEach(btn => {\r\n        btn.addEventListener('click', () => loadSavedSet(btn.dataset.setId));\r\n    });\r\n    \r\n    elements.savedSetsGrid.querySelectorAll('[data-action=\"delete\"]').forEach(btn => {\r\n        btn.addEventListener('click', () => deleteSavedSet(btn.dataset.setId));\r\n    });\r\n    \r\n    elements.savedSetsGrid.querySelectorAll('[data-action=\"study\"]').forEach(btn => {\r\n        btn.addEventListener('click', () => startStudyFromSet(btn.dataset.setId));\r\n    });\r\n}\r\n\r\n// Avvia studio da un set salvato\r\nasync function startStudyFromSet(setId) {\r\n    if (!appState.user) {\r\n        showError('Devi effettuare l\\'accesso per usare la modalità studio.');\r\n        return;\r\n    }\r\n    \r\n    try {\r\n        showLoading(true, 'Caricamento modalità studio...');\r\n        \r\n        // Carica il set di flashcard\r\n        const { data: setData, error } = await FlashcardManager.getFlashcardSet(setId);\r\n        if (error || !setData || !setData.flashcards || setData.flashcards.length === 0) {\r\n            throw new Error('Impossibile caricare il set di flashcard.');\r\n        }\r\n        \r\n        // Imposta il set per lo studio\r\n        appState.selectedStudySet = setData;\r\n        appState.selectedStudySetId = setId;\r\n        \r\n        // Mostra la sezione studio\r\n        elements.studySection.classList.remove('hidden');\r\n        \r\n        // Scroll alla sezione studio\r\n        elements.studySection.scrollIntoView({ behavior: 'smooth' });\r\n        \r\n        // Nascondi altre sezioni per focus\r\n        elements.flashcardSection.classList.add('hidden');\r\n        elements.analyticsSection.classList.add('hidden');\r\n        \r\n        showSuccess(`Modalità studio avviata per \"${setData.name}\" con ${setData.flashcards.length} flashcard!`);\r\n        \r\n    } catch (error) {\r\n        console.error('Errore nell\\'avvio dello studio:', error);\r\n        showError(handleSupabaseError(error));\r\n    } finally {\r\n        showLoading(false);\r\n    }\r\n}\r\n\r\n// Carica set salvato\r\nasync function loadSavedSet(setId) {\r\n    try {\r\n        const { data, error } = await FlashcardManager.getFlashcardSet(setId);\r\n        if (error) throw error;\r\n        \r\n        if (!data) {\r\n            showError('Set non trovato.');\r\n            return;\r\n        }\r\n        \r\n        // Converti il formato Supabase al formato dell'app\r\n        appState.flashcards = data.flashcards.map(card => ({\r\n            domanda: card.question,\r\n            risposta: card.answer,\r\n            difficulty: card.difficulty\r\n        }));\r\n        \r\n        appState.currentIndex = 0;\r\n        appState.answerRevealed = false;\r\n        \r\n        showFlashcardSection();\r\n        updateFlashcardDisplay();\r\n        showSuccess(`Set \"${data.name}\" caricato con successo!`);\r\n        \r\n    } catch (error) {\r\n        showError(handleSupabaseError(error));\r\n    }\r\n}\r\n\r\n// Elimina set salvato\r\nasync function deleteSavedSet(setId) {\r\n    if (!confirm('Sei sicuro di voler eliminare questo set di flashcard?')) {\r\n        return;\r\n    }\r\n    \r\n    try {\r\n        const { error } = await FlashcardManager.deleteFlashcardSet(setId);\r\n        if (error) throw error;\r\n        \r\n        showSuccess('Set eliminato con successo!');\r\n        loadSavedFlashcards();\r\n        updateUserStats();\r\n        \r\n    } catch (error) {\r\n        showError(handleSupabaseError(error));\r\n    }\r\n}\r\n\r\n// Cancella tutti i set salvati\r\nasync function clearAllSavedSets() {\r\n    if (!confirm('Sei sicuro di voler eliminare tutti i set di flashcard salvati? Questa azione non può essere annullata.')) {\r\n        return;\r\n    }\r\n    \r\n    try {\r\n        const { data: sets, error: fetchError } = await FlashcardManager.getUserFlashcardSets();\r\n        if (fetchError) throw fetchError;\r\n        \r\n        // Elimina tutti i set\r\n        for (const set of sets) {\r\n            const { error } = await FlashcardManager.deleteFlashcardSet(set.id);\r\n            if (error) throw error;\r\n        }\r\n        \r\n        showSuccess('Tutti i set sono stati eliminati!');\r\n        loadSavedFlashcards();\r\n        updateUserStats();\r\n        \r\n    } catch (error) {\r\n        showError(handleSupabaseError(error));\r\n    }\r\n}\r\n\r\n// Modalità Studio\r\nasync function updateStudyStats() {\r\n    if (!appState.user) return;\r\n    \r\n    try {\r\n        const { data, error } = await AnalyticsManager.getUserAnalytics(30);\r\n        \r\n        if (error) throw error;\r\n        \r\n        const stats = data || {};\r\n        elements.cardsDue.textContent = stats.cards_due_today || 0;\r\n        elements.cardsStudied.textContent = stats.total_study_sessions || 0;\r\n        \r\n    } catch (error) {\r\n        console.error('Errore nel caricamento delle statistiche di studio:', error);\r\n    }\r\n}\r\n\r\n// Selezione modalità studio\r\nfunction selectStudyMode(event) {\r\n    const mode = event.currentTarget.dataset.mode;\r\n    \r\n    // Rimuovi selezione precedente\r\n    elements.studyModeCards.forEach(card => {\r\n        card.classList.remove('selected');\r\n    });\r\n    \r\n    // Seleziona modalità corrente\r\n    event.currentTarget.classList.add('selected');\r\n    appState.selectedStudyMode = mode;\r\n    \r\n    // Mostra pulsante inizia studio\r\n    elements.startStudyBtn.classList.remove('hidden');\r\n    \r\n    // Aggiorna modalità corrente\r\n    const modeNames = {\r\n        'spaced': 'Ripetizione Spaziata',\r\n        'quiz': 'Quiz Mode',\r\n        'matching': 'Matching',\r\n        'memory': 'Memory Game',\r\n        'speed': 'Speed Review'\r\n    };\r\n    \r\n    elements.currentStudyMode.textContent = modeNames[mode] || '-';\r\n}\r\n\r\nasync function startStudyMode() {\r\n    if (!appState.user) {\r\n        showError('Devi effettuare l\\'accesso per usare la modalità studio.');\r\n        return;\r\n    }\r\n    \r\n    if (!appState.selectedStudyMode) {\r\n        showError('Seleziona una modalità di studio prima di iniziare.');\r\n        return;\r\n    }\r\n    \r\n    try {\r\n        showLoading(true);\r\n        \r\n        // Nascondi selettore modalità\r\n        elements.studyModeSelector.classList.add('hidden');\r\n        \r\n        // Carica dati per la modalità selezionata\r\n        await loadStudyModeData();\r\n        \r\n        appState.studyMode = true;\r\n        appState.studyStartTime = Date.now();\r\n        appState.cardsStudiedToday = 0;\r\n        \r\n        elements.startStudyBtn.classList.add('hidden');\r\n        elements.stopStudyBtn.classList.remove('hidden');\r\n        \r\n        // Avvia modalità specifica\r\n        startSpecificStudyMode();\r\n        \r\n    } catch (error) {\r\n        console.error('Errore modalità studio:', error);\r\n        showError('Errore nella modalità studio. Verifica la configurazione del database.');\r\n    } finally {\r\n        showLoading(false);\r\n    }\r\n}\r\n\r\nasync function loadStudyModeData() {\r\n    if (appState.selectedStudyMode === 'spaced') {\r\n        // Modalità ripetizione spaziata - usa dati dal database\r\n        const { data, error } = await AnalyticsManager.getCardsForReview();\r\n        \r\n        if (error) {\r\n            console.warn('Modalità studio non disponibile, database non configurato:', error);\r\n            throw new Error('Modalità studio non disponibile. Configura il database per abilitare la ripetizione spaziata.');\r\n        }\r\n        \r\n        if (!data || data.length === 0) {\r\n            throw new Error('Nessuna carta da ripassare oggi! 🎉');\r\n        }\r\n        \r\n        appState.studyCards = data;\r\n        appState.currentStudyIndex = 0;\r\n        \r\n    } else {\r\n        // Altre modalità - usa flashcard salvate\r\n        const { data, error } = await FlashcardManager.getUserFlashcardSets();\r\n        \r\n        if (error || !data || data.length === 0) {\r\n            throw new Error('Nessuna flashcard salvata disponibile per questa modalità.');\r\n        }\r\n        \r\n        // Mostra selezione set se ci sono più set disponibili\r\n        let selectedSet;\r\n        if (data.length === 1) {\r\n            selectedSet = data[0];\r\n        } else {\r\n            selectedSet = await showSetSelectionModal(data);\r\n            if (!selectedSet) {\r\n                throw new Error('Nessun set selezionato.');\r\n            }\r\n        }\r\n        \r\n        const { data: setData, error: setError } = await FlashcardManager.getFlashcardSet(selectedSet.id);\r\n        \r\n        if (setError || !setData || !setData.flashcards || setData.flashcards.length === 0) {\r\n            throw new Error('Nessuna flashcard disponibile nel set selezionato.');\r\n        }\r\n        \r\n        const flashcards = setData.flashcards;\r\n        \r\n        // Prepara dati per modalità specifiche\r\n        switch (appState.selectedStudyMode) {\r\n            case 'quiz':\r\n                appState.quizData = prepareQuizData(flashcards);\r\n                break;\r\n            case 'matching':\r\n                appState.matchingData = prepareMatchingData(flashcards);\r\n                break;\r\n            case 'memory':\r\n                appState.memoryData = prepareMemoryData(flashcards);\r\n                break;\r\n            case 'speed':\r\n                appState.speedData = prepareSpeedData(flashcards);\r\n                break;\r\n        }\r\n        \r\n        appState.currentStudyIndex = 0;\r\n    }\r\n}\r\n\r\nfunction startSpecificStudyMode() {\r\n    switch (appState.selectedStudyMode) {\r\n        case 'spaced':\r\n            elements.studyCard.classList.remove('hidden');\r\n            showStudyCard();\r\n            break;\r\n        case 'quiz':\r\n            elements.quizMode.classList.remove('hidden');\r\n            startQuizMode();\r\n            break;\r\n        case 'matching':\r\n            elements.matchingMode.classList.remove('hidden');\r\n            startMatchingMode();\r\n            break;\r\n        case 'memory':\r\n            elements.memoryMode.classList.remove('hidden');\r\n            startMemoryMode();\r\n            break;\r\n        case 'speed':\r\n            elements.speedMode.classList.remove('hidden');\r\n            startSpeedMode();\r\n            break;\r\n    }\r\n}\r\n\r\n// ===== PREPARAZIONE DATI MODALITÀ =====\r\n\r\nfunction prepareQuizData(flashcards) {\r\n    return flashcards.map(card => ({\r\n        question: card.question,\r\n        correctAnswer: card.answer,\r\n        options: generateQuizOptions(card.answer, flashcards),\r\n        difficulty: card.difficulty || 2\r\n    }));\r\n}\r\n\r\nfunction generateQuizOptions(correctAnswer, allCards) {\r\n    const options = [correctAnswer];\r\n    const otherAnswers = allCards\r\n        .filter(card => card.answer !== correctAnswer)\r\n        .map(card => card.answer)\r\n        .sort(() => Math.random() - 0.5)\r\n        .slice(0, 3);\r\n    \r\n    options.push(...otherAnswers);\r\n    return options.sort(() => Math.random() - 0.5);\r\n}\r\n\r\nfunction prepareMatchingData(flashcards) {\r\n    const questions = flashcards.map(card => card.question);\r\n    const answers = flashcards.map(card => card.answer);\r\n    \r\n    return {\r\n        questions: questions.sort(() => Math.random() - 0.5),\r\n        answers: answers.sort(() => Math.random() - 0.5),\r\n        pairs: flashcards.map(card => ({\r\n            question: card.question,\r\n            answer: card.answer\r\n        }))\r\n    };\r\n}\r\n\r\nfunction prepareMemoryData(flashcards) {\r\n    const cards = [];\r\n    flashcards.forEach((card, index) => {\r\n        cards.push({\r\n            id: `q${index}`,\r\n            content: card.question,\r\n            type: 'question',\r\n            pairId: index\r\n        });\r\n        cards.push({\r\n            id: `a${index}`,\r\n            content: card.answer,\r\n            type: 'answer',\r\n            pairId: index\r\n        });\r\n    });\r\n    \r\n    return cards.sort(() => Math.random() - 0.5);\r\n}\r\n\r\nfunction prepareSpeedData(flashcards) {\r\n    return flashcards.map(card => ({\r\n        question: card.question,\r\n        answer: card.answer,\r\n        difficulty: card.difficulty || 2\r\n    }));\r\n}\r\n\r\n// ===== QUIZ MODE =====\r\n\r\nfunction startQuizMode() {\r\n    appState.quizScore = 0;\r\n    appState.currentStudyIndex = 0;\r\n    showQuizQuestion();\r\n}\r\n\r\nfunction showQuizQuestion() {\r\n    const currentQuiz = appState.quizData[appState.currentStudyIndex];\r\n    if (!currentQuiz) {\r\n        endQuizMode();\r\n        return;\r\n    }\r\n    \r\n    // Aggiorna progresso\r\n    const progress = ((appState.currentStudyIndex + 1) / appState.quizData.length) * 100;\r\n    elements.quizProgress.style.width = `${progress}%`;\r\n    elements.quizProgressText.textContent = `${appState.currentStudyIndex + 1} di ${appState.quizData.length}`;\r\n    \r\n    // Mostra domanda\r\n    elements.quizQuestion.textContent = currentQuiz.question;\r\n    \r\n    // Genera opzioni\r\n    elements.quizOptions.innerHTML = '';\r\n    currentQuiz.options.forEach((option, index) => {\r\n        const optionBtn = document.createElement('button');\r\n        optionBtn.className = 'quiz-option';\r\n        optionBtn.textContent = option;\r\n        optionBtn.dataset.answer = option;\r\n        optionBtn.addEventListener('click', selectQuizAnswer);\r\n        elements.quizOptions.appendChild(optionBtn);\r\n    });\r\n    \r\n    // Nascondi feedback\r\n    elements.quizFeedback.classList.add('hidden');\r\n}\r\n\r\nfunction selectQuizAnswer(event) {\r\n    const selectedAnswer = event.target.dataset.answer;\r\n    const currentQuiz = appState.quizData[appState.currentStudyIndex];\r\n    const isCorrect = selectedAnswer === currentQuiz.correctAnswer;\r\n    \r\n    // Disabilita tutte le opzioni\r\n    document.querySelectorAll('.quiz-option').forEach(btn => {\r\n        btn.disabled = true;\r\n        if (btn.dataset.answer === currentQuiz.correctAnswer) {\r\n            btn.classList.add('correct');\r\n        } else if (btn.dataset.answer === selectedAnswer && !isCorrect) {\r\n            btn.classList.add('incorrect');\r\n        }\r\n    });\r\n    \r\n    // Mostra feedback\r\n    if (isCorrect) {\r\n        appState.quizScore++;\r\n        elements.feedbackIcon.textContent = '✅';\r\n        elements.feedbackText.textContent = 'Corretto!';\r\n        elements.correctAnswer.textContent = '';\r\n    } else {\r\n        elements.feedbackIcon.textContent = '❌';\r\n        elements.feedbackText.textContent = 'Sbagliato!';\r\n        elements.correctAnswer.textContent = `Risposta corretta: ${currentQuiz.correctAnswer}`;\r\n    }\r\n    \r\n    elements.quizFeedback.classList.remove('hidden');\r\n}\r\n\r\nfunction nextQuizQuestion() {\r\n    appState.currentStudyIndex++;\r\n    if (appState.currentStudyIndex < appState.quizData.length) {\r\n        showQuizQuestion();\r\n    } else {\r\n        endQuizMode();\r\n    }\r\n}\r\n\r\nfunction endQuizMode() {\r\n    const percentage = Math.round((appState.quizScore / appState.quizData.length) * 100);\r\n    showSuccess(`Quiz completato! Punteggio: ${appState.quizScore}/${appState.quizData.length} (${percentage}%)`);\r\n    stopStudyMode();\r\n}\r\n\r\n// ===== MATCHING MODE =====\r\n\r\nfunction startMatchingMode() {\r\n    appState.matchingScore = 0;\r\n    appState.currentStudyIndex = 0;\r\n    showMatchingGame();\r\n}\r\n\r\nfunction showMatchingGame() {\r\n    const data = appState.matchingData;\r\n    \r\n    // Aggiorna progresso\r\n    const progress = (appState.matchingScore / data.pairs.length) * 100;\r\n    elements.matchingProgress.style.width = `${progress}%`;\r\n    elements.matchingProgressText.textContent = `${appState.matchingScore} di ${data.pairs.length}`;\r\n    \r\n    // Genera griglia\r\n    elements.matchingGrid.innerHTML = '';\r\n    \r\n    // Colonna domande\r\n    const questionsColumn = document.createElement('div');\r\n    questionsColumn.className = 'matching-column';\r\n    questionsColumn.innerHTML = '<h4>Domande</h4>';\r\n    \r\n    data.questions.forEach((question, index) => {\r\n        const item = document.createElement('div');\r\n        item.className = 'matching-item';\r\n        item.textContent = question;\r\n        item.dataset.type = 'question';\r\n        item.dataset.index = index;\r\n        item.addEventListener('click', selectMatchingItem);\r\n        questionsColumn.appendChild(item);\r\n    });\r\n    \r\n    // Colonna risposte\r\n    const answersColumn = document.createElement('div');\r\n    answersColumn.className = 'matching-column';\r\n    answersColumn.innerHTML = '<h4>Risposte</h4>';\r\n    \r\n    data.answers.forEach((answer, index) => {\r\n        const item = document.createElement('div');\r\n        item.className = 'matching-item';\r\n        item.textContent = answer;\r\n        item.dataset.type = 'answer';\r\n        item.dataset.index = index;\r\n        item.addEventListener('click', selectMatchingItem);\r\n        answersColumn.appendChild(item);\r\n    });\r\n    \r\n    elements.matchingGrid.appendChild(questionsColumn);\r\n    elements.matchingGrid.appendChild(answersColumn);\r\n    \r\n    // Nascondi feedback\r\n    elements.matchingFeedback.classList.add('hidden');\r\n}\r\n\r\nlet selectedMatchingItem = null;\r\n\r\nfunction selectMatchingItem(event) {\r\n    const item = event.target;\r\n    \r\n    if (item.classList.contains('matched')) return;\r\n    \r\n    if (!selectedMatchingItem) {\r\n        // Prima selezione\r\n        selectedMatchingItem = item;\r\n        item.classList.add('selected');\r\n    } else {\r\n        // Seconda selezione\r\n        if (selectedMatchingItem === item) {\r\n            // Deseleziona se stesso\r\n            selectedMatchingItem.classList.remove('selected');\r\n            selectedMatchingItem = null;\r\n            return;\r\n        }\r\n        \r\n        // Controlla se è una coppia corretta\r\n        const isCorrect = checkMatchingPair(selectedMatchingItem, item);\r\n        \r\n        if (isCorrect) {\r\n            selectedMatchingItem.classList.add('matched');\r\n            item.classList.add('matched');\r\n            appState.matchingScore++;\r\n            \r\n            // Mostra feedback positivo\r\n            elements.matchingFeedbackIcon.textContent = '✅';\r\n            elements.matchingFeedbackText.textContent = 'Perfetto!';\r\n            elements.matchingFeedback.classList.remove('hidden');\r\n            \r\n            // Aggiorna progresso\r\n            const progress = (appState.matchingScore / appState.matchingData.pairs.length) * 100;\r\n            elements.matchingProgress.style.width = `${progress}%`;\r\n            elements.matchingProgressText.textContent = `${appState.matchingScore} di ${appState.matchingData.pairs.length}`;\r\n            \r\n            // Controlla se completato\r\n            if (appState.matchingScore === appState.matchingData.pairs.length) {\r\n                setTimeout(() => {\r\n                    showSuccess(`Matching completato! Tutte le coppie trovate! 🎉`);\r\n                    stopStudyMode();\r\n                }, 1000);\r\n            }\r\n        } else {\r\n            // Mostra feedback negativo\r\n            elements.matchingFeedbackIcon.textContent = '❌';\r\n            elements.matchingFeedbackText.textContent = 'Prova ancora!';\r\n            elements.matchingFeedback.classList.remove('hidden');\r\n            \r\n            // Rimuovi selezione dopo un po'\r\n            setTimeout(() => {\r\n                selectedMatchingItem.classList.remove('selected');\r\n                item.classList.remove('selected');\r\n            }, 1000);\r\n        }\r\n        \r\n        selectedMatchingItem = null;\r\n    }\r\n}\r\n\r\nfunction checkMatchingPair(questionItem, answerItem) {\r\n    const questionText = questionItem.textContent;\r\n    const answerText = answerItem.textContent;\r\n    \r\n    return appState.matchingData.pairs.some(pair => \r\n        pair.question === questionText && pair.answer === answerText\r\n    );\r\n}\r\n\r\n// ===== MEMORY MODE =====\r\n\r\nfunction startMemoryMode() {\r\n    appState.memoryScore = 0;\r\n    appState.memoryAttempts = 0;\r\n    appState.memoryPairs = 0;\r\n    appState.currentStudyIndex = 0;\r\n    showMemoryGame();\r\n}\r\n\r\nfunction showMemoryGame() {\r\n    const data = appState.memoryData;\r\n    \r\n    // Aggiorna progresso\r\n    const progress = (appState.memoryPairs / (data.length / 2)) * 100;\r\n    elements.memoryProgress.style.width = `${progress}%`;\r\n    elements.memoryProgressText.textContent = `${appState.memoryPairs} di ${data.length / 2}`;\r\n    \r\n    // Aggiorna statistiche\r\n    elements.memoryAttempts.textContent = appState.memoryAttempts;\r\n    elements.memoryPairs.textContent = appState.memoryPairs;\r\n    \r\n    // Genera griglia\r\n    elements.memoryGrid.innerHTML = '';\r\n    \r\n    data.forEach((card, index) => {\r\n        const memoryCard = document.createElement('div');\r\n        memoryCard.className = 'memory-card';\r\n        memoryCard.dataset.index = index;\r\n        memoryCard.dataset.pairId = card.pairId;\r\n        memoryCard.dataset.type = card.type;\r\n        memoryCard.addEventListener('click', flipMemoryCard);\r\n        elements.memoryGrid.appendChild(memoryCard);\r\n    });\r\n}\r\n\r\nlet flippedCards = [];\r\nlet memoryLocked = false;\r\n\r\nfunction flipMemoryCard(event) {\r\n    if (memoryLocked) return;\r\n    \r\n    const card = event.target;\r\n    if (card.classList.contains('flipped') || card.classList.contains('matched')) return;\r\n    \r\n    // Mostra contenuto\r\n    const cardData = appState.memoryData[card.dataset.index];\r\n    card.textContent = cardData.content;\r\n    card.classList.add('flipped');\r\n    flippedCards.push(card);\r\n    \r\n    if (flippedCards.length === 2) {\r\n        memoryLocked = true;\r\n        appState.memoryAttempts++;\r\n        elements.memoryAttempts.textContent = appState.memoryAttempts;\r\n        \r\n        const [card1, card2] = flippedCards;\r\n        \r\n        if (card1.dataset.pairId === card2.dataset.pairId) {\r\n            // Coppia corretta\r\n            setTimeout(() => {\r\n                card1.classList.add('matched');\r\n                card2.classList.add('matched');\r\n                appState.memoryPairs++;\r\n                elements.memoryPairs.textContent = appState.memoryPairs;\r\n                \r\n                // Aggiorna progresso\r\n                const progress = (appState.memoryPairs / (appState.memoryData.length / 2)) * 100;\r\n                elements.memoryProgress.style.width = `${progress}%`;\r\n                elements.memoryProgressText.textContent = `${appState.memoryPairs} di ${appState.memoryData.length / 2}`;\r\n                \r\n                // Controlla se completato\r\n                if (appState.memoryPairs === appState.memoryData.length / 2) {\r\n                    setTimeout(() => {\r\n                        showSuccess(`Memory completato! ${appState.memoryAttempts} tentativi! 🎉`);\r\n                        stopStudyMode();\r\n                    }, 1000);\r\n                }\r\n                \r\n                memoryLocked = false;\r\n            }, 500);\r\n        } else {\r\n            // Coppia sbagliata\r\n            setTimeout(() => {\r\n                card1.classList.remove('flipped');\r\n                card2.classList.remove('flipped');\r\n                card1.textContent = '';\r\n                card2.textContent = '';\r\n                memoryLocked = false;\r\n            }, 1000);\r\n        }\r\n        \r\n        flippedCards = [];\r\n    }\r\n}\r\n\r\n// ===== SPEED MODE =====\r\n\r\nfunction startSpeedMode() {\r\n    appState.speedScore = 0;\r\n    appState.currentStudyIndex = 0;\r\n    showSpeedCard();\r\n}\r\n\r\nfunction showSpeedCard() {\r\n    const currentCard = appState.speedData[appState.currentStudyIndex];\r\n    if (!currentCard) {\r\n        endSpeedMode();\r\n        return;\r\n    }\r\n    \r\n    // Aggiorna progresso\r\n    const progress = ((appState.currentStudyIndex + 1) / appState.speedData.length) * 100;\r\n    elements.speedProgress.style.width = `${progress}%`;\r\n    elements.speedProgressText.textContent = `${appState.currentStudyIndex + 1} di ${appState.speedData.length}`;\r\n    \r\n    // Mostra domanda\r\n    elements.speedQuestion.textContent = currentCard.question;\r\n    elements.speedAnswer.classList.add('hidden');\r\n    elements.speedAnswer.textContent = currentCard.answer;\r\n    \r\n    // Reset controlli\r\n    elements.revealSpeedAnswer.classList.remove('hidden');\r\n    elements.speedNext.classList.add('hidden');\r\n    \r\n    // Avvia timer\r\n    startSpeedTimer();\r\n}\r\n\r\nlet speedTimerInterval = null;\r\n\r\nfunction startSpeedTimer() {\r\n    let timeLeft = 5;\r\n    elements.speedTimer.textContent = timeLeft;\r\n    \r\n    speedTimerInterval = setInterval(() => {\r\n        timeLeft--;\r\n        elements.speedTimer.textContent = timeLeft;\r\n        \r\n        if (timeLeft <= 0) {\r\n            clearInterval(speedTimerInterval);\r\n            revealSpeedAnswer();\r\n        }\r\n    }, 1000);\r\n}\r\n\r\nfunction revealSpeedAnswer() {\r\n    if (speedTimerInterval) {\r\n        clearInterval(speedTimerInterval);\r\n    }\r\n    \r\n    elements.speedAnswer.classList.remove('hidden');\r\n    elements.revealSpeedAnswer.classList.add('hidden');\r\n    elements.speedNext.classList.remove('hidden');\r\n}\r\n\r\nfunction nextSpeedCard() {\r\n    appState.currentStudyIndex++;\r\n    if (appState.currentStudyIndex < appState.speedData.length) {\r\n        showSpeedCard();\r\n    } else {\r\n        endSpeedMode();\r\n    }\r\n}\r\n\r\nfunction endSpeedMode() {\r\n    showSuccess(`Speed Review completato! ${appState.speedData.length} carte riviste! ⚡`);\r\n    stopStudyMode();\r\n}\r\n\r\nasync function stopStudyMode() {\r\n    if (appState.studyMode && appState.studyStartTime) {\r\n        // Salva la sessione di studio\r\n        try {\r\n            const studyTime = Math.round((Date.now() - appState.studyStartTime) / 1000);\r\n            const mode = appState.selectedStudyMode || 'spaced_repetition';\r\n            \r\n            await AnalyticsManager.recordStudySession({\r\n                session_end: new Date().toISOString(),\r\n                cards_studied: appState.cardsStudiedToday,\r\n                correct_answers: appState.cardsStudiedToday, // Semplificato per ora\r\n                total_time_seconds: studyTime,\r\n                study_mode: mode\r\n            });\r\n        } catch (error) {\r\n            console.error('Errore nel salvataggio della sessione:', error);\r\n        }\r\n    }\r\n    \r\n    // Reset stato studio\r\n    appState.studyMode = false;\r\n    appState.studyCards = [];\r\n    appState.currentStudyIndex = 0;\r\n    appState.studyStartTime = null;\r\n    appState.cardsStudiedToday = 0;\r\n    appState.selectedStudyMode = null;\r\n    \r\n    // Nascondi tutte le modalità\r\n    elements.studyCard.classList.add('hidden');\r\n    elements.studyAnswer.classList.add('hidden');\r\n    elements.quizMode.classList.add('hidden');\r\n    elements.matchingMode.classList.add('hidden');\r\n    elements.memoryMode.classList.add('hidden');\r\n    elements.speedMode.classList.add('hidden');\r\n    \r\n    // Mostra selettore modalità\r\n    elements.studyModeSelector.classList.remove('hidden');\r\n    \r\n    // Reset selezione modalità\r\n    elements.studyModeCards.forEach(card => {\r\n        card.classList.remove('selected');\r\n    });\r\n    \r\n    // Mostra controlli\r\n    elements.startStudyBtn.classList.add('hidden');\r\n    elements.stopStudyBtn.classList.add('hidden');\r\n    \r\n    // Aggiorna modalità corrente\r\n    elements.currentStudyMode.textContent = '-';\r\n    \r\n    // Aggiorna statistiche\r\n    updateStudyStats();\r\n}\r\n\r\nfunction showStudyCard() {\r\n    if (appState.currentStudyIndex >= appState.studyCards.length) {\r\n        showSuccess('Hai completato tutte le carte per oggi! 🎉');\r\n        stopStudyMode();\r\n        updateStudyStats();\r\n        return;\r\n    }\r\n    \r\n    const card = appState.studyCards[appState.currentStudyIndex];\r\n    \r\n    elements.studyQuestionText.textContent = card.question;\r\n    elements.studyAnswerText.textContent = card.answer;\r\n    elements.studyAnswer.classList.add('hidden');\r\n    elements.studyRevealBtn.classList.remove('hidden');\r\n    elements.studyRevealBtn.textContent = 'Mostra Risposta';\r\n    \r\n    // Aggiorna progresso\r\n    const progress = ((appState.currentStudyIndex + 1) / appState.studyCards.length) * 100;\r\n    elements.studyProgress.style.width = `${progress}%`;\r\n    elements.studyProgressText.textContent = `${appState.currentStudyIndex + 1} di ${appState.studyCards.length}`;\r\n}\r\n\r\nfunction revealStudyAnswer() {\r\n    elements.studyAnswer.classList.remove('hidden');\r\n    elements.studyRevealBtn.classList.add('hidden');\r\n}\r\n\r\nasync function handleStudyRating(quality) {\r\n    const card = appState.studyCards[appState.currentStudyIndex];\r\n    \r\n    try {\r\n        // Calcola tempo di risposta\r\n        const responseTime = appState.studyStartTime ? \r\n            Math.round((Date.now() - appState.studyStartTime) / 1000) : null;\r\n        \r\n        // Usa algoritmo ripetizione spaziata avanzato\r\n        const { error } = await SpacedRepetition.recordStudySession(card.card_id, quality, {\r\n            responseTime: responseTime,\r\n            mode: appState.selectedStudyMode || 'spaced_repetition',\r\n            deviceType: 'desktop'\r\n        });\r\n        \r\n        if (error) throw error;\r\n        \r\n        appState.cardsStudiedToday++;\r\n        appState.currentStudyIndex++;\r\n        \r\n        // Prossima carta o fine sessione\r\n        if (appState.currentStudyIndex < appState.studyCards.length) {\r\n            showStudyCard();\r\n        } else {\r\n            showSuccess('Hai completato tutte le carte per oggi! 🎉');\r\n            stopStudyMode();\r\n        }\r\n        \r\n        // Aggiorna statistiche\r\n        updateStudyStats();\r\n        \r\n    } catch (error) {\r\n        showError(handleSupabaseError(error));\r\n    }\r\n}\r\n\r\n// Analytics Dashboard\r\n// Mostra modalità studio\r\nfunction showStudyMode() {\r\n    if (!appState.user) {\r\n        showError('Devi effettuare l\\'accesso per usare la modalità studio.');\r\n        return;\r\n    }\r\n    \r\n    // Nascondi altre sezioni\r\n    elements.flashcardSection.classList.add('hidden');\r\n    elements.analyticsSection.classList.add('hidden');\r\n    \r\n    // Mostra sezione studio\r\n    elements.studySection.classList.remove('hidden');\r\n    \r\n    // Scroll alla sezione\r\n    elements.studySection.scrollIntoView({ behavior: 'smooth' });\r\n    \r\n    showSuccess('Modalità studio attivata! Seleziona una modalità per iniziare.');\r\n}\r\n\r\nfunction showAnalyticsDashboard() {\r\n    if (!appState.user) {\r\n        showError('Devi effettuare l\\'accesso per visualizzare gli analytics.');\r\n        return;\r\n    }\r\n    \r\n    elements.analyticsSection.classList.remove('hidden');\r\n    elements.analyticsSection.scrollIntoView({ behavior: 'smooth' });\r\n    loadAnalytics();\r\n}\r\n\r\nasync function loadAnalytics() {\r\n    if (!appState.user) return;\r\n    \r\n    try {\r\n        showLoading(true, 'Caricamento analytics...');\r\n        \r\n        const daysBack = parseInt(elements.analyticsTimeframe.value);\r\n        const { data, error } = await AnalyticsManager.getUserAnalytics(daysBack);\r\n        \r\n        if (error) {\r\n            console.warn('Analytics non disponibili, mostrando dati di base:', error);\r\n            // Mostra dati di base se analytics non sono disponibili\r\n            showBasicAnalytics();\r\n            return;\r\n        }\r\n        \r\n        if (data) {\r\n            updateAnalyticsDisplay(data);\r\n            generateInsights(data);\r\n        }\r\n        \r\n    } catch (error) {\r\n        console.error('Errore analytics:', error);\r\n        showBasicAnalytics();\r\n    } finally {\r\n        showLoading(false);\r\n    }\r\n}\r\n\r\nfunction showBasicAnalytics() {\r\n    // Mostra analytics di base quando il database non è ancora configurato\r\n    elements.totalSets.textContent = '0';\r\n    elements.totalCards.textContent = '0';\r\n    elements.studyStreak.textContent = '0';\r\n    elements.accuracyRate.textContent = '0%';\r\n    elements.totalStudyTime.textContent = '0h';\r\n    elements.cardsDueToday.textContent = '0';\r\n    \r\n    elements.weeklyProgressChart.innerHTML = '<div class=\"no-data\">Database non configurato</div>';\r\n    elements.accuracyChart.innerHTML = '<div class=\"no-data\">Database non configurato</div>';\r\n    \r\n    elements.insightsList.innerHTML = `\r\n        <div class=\"insight-item\">\r\n            <div class=\"insight-icon\">⚠️</div>\r\n            <div class=\"insight-content\">\r\n                <div class=\"insight-title\">Database non configurato</div>\r\n                <div class=\"insight-description\">Esegui lo schema SQL nel dashboard Supabase per abilitare gli analytics completi.</div>\r\n            </div>\r\n        </div>\r\n    `;\r\n}\r\n\r\nfunction updateAnalyticsDisplay(analytics) {\r\n    // Aggiorna statistiche principali\r\n    elements.totalSets.textContent = analytics.total_sets || 0;\r\n    elements.totalCards.textContent = analytics.total_cards || 0;\r\n    elements.studyStreak.textContent = analytics.study_streak || 0;\r\n    elements.accuracyRate.textContent = `${analytics.accuracy_rate || 0}%`;\r\n    elements.totalStudyTime.textContent = `${Math.round((analytics.total_study_time || 0) / 60)}h`;\r\n    elements.cardsDueToday.textContent = analytics.cards_due_today || 0;\r\n    \r\n    // Aggiorna grafici\r\n    updateWeeklyProgressChart(analytics.weekly_progress || []);\r\n    updateAccuracyChart(analytics.weekly_progress || []);\r\n}\r\n\r\nfunction updateWeeklyProgressChart(weeklyData) {\r\n    const chart = elements.weeklyProgressChart;\r\n    \r\n    if (!weeklyData || weeklyData.length === 0) {\r\n        chart.innerHTML = '<div class=\"no-data\">Nessun dato disponibile</div>';\r\n        return;\r\n    }\r\n    \r\n    // Crea un grafico semplice con CSS\r\n    const maxCards = Math.max(...weeklyData.map(d => d.cards_studied || 0));\r\n    \r\n    chart.innerHTML = `\r\n        <div class=\"simple-chart\">\r\n            ${weeklyData.map(day => `\r\n                <div class=\"chart-bar\">\r\n                    <div class=\"bar\" style=\"height: ${((day.cards_studied || 0) / maxCards) * 100}%\"></div>\r\n                    <div class=\"bar-label\">${new Date(day.date).toLocaleDateString('it-IT', { weekday: 'short' })}</div>\r\n                </div>\r\n            `).join('')}\r\n        </div>\r\n    `;\r\n}\r\n\r\nfunction updateAccuracyChart(weeklyData) {\r\n    const chart = elements.accuracyChart;\r\n    \r\n    if (!weeklyData || weeklyData.length === 0) {\r\n        chart.innerHTML = '<div class=\"no-data\">Nessun dato disponibile</div>';\r\n        return;\r\n    }\r\n    \r\n    // Crea un grafico di accuratezza\r\n    chart.innerHTML = `\r\n        <div class=\"accuracy-chart\">\r\n            ${weeklyData.map(day => `\r\n                <div class=\"accuracy-day\">\r\n                    <div class=\"accuracy-bar\">\r\n                        <div class=\"accuracy-fill\" style=\"width: ${day.accuracy || 0}%\"></div>\r\n                    </div>\r\n                    <div class=\"accuracy-label\">${day.accuracy || 0}%</div>\r\n                </div>\r\n            `).join('')}\r\n        </div>\r\n    `;\r\n}\r\n\r\nfunction generateInsights(analytics) {\r\n    const insights = AnalyticsManager.generateInsights(analytics);\r\n    \r\n    if (insights.length === 0) {\r\n        elements.insightsList.innerHTML = `\r\n            <div class=\"insight-item\">\r\n                <div class=\"insight-icon\">🎯</div>\r\n                <div class=\"insight-content\">\r\n                    <div class=\"insight-title\">Inizia a studiare!</div>\r\n                    <div class=\"insight-description\">Crea le tue prime flashcard e inizia il tuo percorso di apprendimento.</div>\r\n                </div>\r\n            </div>\r\n        `;\r\n        return;\r\n    }\r\n    \r\n    elements.insightsList.innerHTML = insights.map(insight => `\r\n        <div class=\"insight-item\">\r\n            <div class=\"insight-icon\">${insight.icon}</div>\r\n            <div class=\"insight-content\">\r\n                <div class=\"insight-title\">${insight.title}</div>\r\n                <div class=\"insight-description\">${insight.description}</div>\r\n            </div>\r\n        </div>\r\n    `).join('');\r\n}\r\n\r\n// Mostra modal esportazione\r\nfunction showExportModal() {\r\n    elements.exportModal.classList.remove('hidden');\r\n}\r\n\r\n// Nascondi modal esportazione\r\nfunction hideExportModal() {\r\n    elements.exportModal.classList.add('hidden');\r\n}\r\n\r\n// Copia flashcard negli appunti\r\nasync function copyFlashcards() {\r\n    if (appState.flashcards.length === 0) {\r\n        showError('Nessuna flashcard da copiare.');\r\n        return;\r\n    }\r\n    \r\n    const text = appState.flashcards.map((card, index) => \r\n        `${index + 1}. Domanda: ${card.domanda}\\n   Risposta: ${card.risposta}`\r\n    ).join('\\n\\n');\r\n    \r\n    try {\r\n        await navigator.clipboard.writeText(text);\r\n        showSuccess('Flashcard copiate negli appunti!');\r\n    } catch (error) {\r\n        showError('Errore nella copia: ' + error.message);\r\n    }\r\n}\r\n\r\n// Esporta flashcard\r\nfunction exportFlashcards(format) {\r\n    if (appState.flashcards.length === 0) {\r\n        showError('Nessuna flashcard da esportare.');\r\n        return;\r\n    }\r\n    \r\n    let content, filename, mimeType;\r\n    \r\n    if (format === 'json') {\r\n        content = JSON.stringify(appState.flashcards, null, 2);\r\n        filename = 'flashcard.json';\r\n        mimeType = 'application/json';\r\n    } else if (format === 'csv') {\r\n        const csvContent = [\r\n            'Domanda,Risposta',\r\n            ...appState.flashcards.map(card => \r\n                `\"${card.domanda.replace(/\"/g, '\"\"')}\",\"${card.risposta.replace(/\"/g, '\"\"')}\"`\r\n            )\r\n        ].join('\\n');\r\n        content = csvContent;\r\n        filename = 'flashcard.csv';\r\n        mimeType = 'text/csv';\r\n    }\r\n    \r\n    const blob = new Blob([content], { type: mimeType });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = filename;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n    \r\n    hideExportModal();\r\n    showSuccess(`Flashcard esportate in formato ${format.toUpperCase()}!`);\r\n}\r\n\r\n// Mostra loading con progresso\r\nfunction showLoading(show, message = 'Elaborazione in corso...') {\r\n    appState.isLoading = show;\r\n    const btnText = elements.generateBtn.querySelector('.btn-text');\r\n    const spinner = elements.generateBtn.querySelector('.loading-spinner');\r\n    \r\n    if (show) {\r\n        btnText.textContent = message;\r\n        btnText.classList.remove('hidden');\r\n        spinner.classList.remove('hidden');\r\n        elements.generateBtn.disabled = true;\r\n        \r\n        // Mostra progress indicator\r\n        showProgressIndicator(message);\r\n    } else {\r\n        btnText.textContent = 'Genera Flashcard';\r\n        btnText.classList.remove('hidden');\r\n        spinner.classList.add('hidden');\r\n        elements.generateBtn.disabled = false;\r\n        \r\n        // Nascondi progress indicator\r\n        hideProgressIndicator();\r\n    }\r\n}\r\n\r\n// Progress indicator avanzato\r\nfunction showProgressIndicator(message) {\r\n    // Rimuovi indicatori esistenti\r\n    hideProgressIndicator();\r\n    \r\n    const indicator = document.createElement('div');\r\n    indicator.id = 'progress-indicator';\r\n    indicator.className = 'progress-indicator';\r\n    indicator.innerHTML = `\r\n        <div class=\"progress-content\">\r\n            <div class=\"progress-spinner\"></div>\r\n            <div class=\"progress-text\">${message}</div>\r\n            <div class=\"progress-steps\">\r\n                <div class=\"step active\" data-step=\"1\">Analisi testo</div>\r\n                <div class=\"step\" data-step=\"2\">Generazione AI</div>\r\n                <div class=\"step\" data-step=\"3\">Validazione</div>\r\n            </div>\r\n        </div>\r\n    `;\r\n    \r\n    document.body.appendChild(indicator);\r\n    \r\n    // Anima i passaggi\r\n    setTimeout(() => updateProgressStep(2), 1000);\r\n    setTimeout(() => updateProgressStep(3), 2000);\r\n}\r\n\r\nfunction updateProgressStep(step) {\r\n    const steps = document.querySelectorAll('.progress-steps .step');\r\n    steps.forEach((s, index) => {\r\n        if (index + 1 <= step) {\r\n            s.classList.add('active');\r\n        }\r\n    });\r\n}\r\n\r\nfunction hideProgressIndicator() {\r\n    const indicator = document.getElementById('progress-indicator');\r\n    if (indicator) {\r\n        indicator.remove();\r\n    }\r\n}\r\n\r\n// Mostra errore\r\nfunction showError(message) {\r\n    showNotification(message, 'error');\r\n}\r\n\r\n// Mostra successo\r\nfunction showSuccess(message) {\r\n    showNotification(message, 'success');\r\n}\r\n\r\n// Mostra notifica\r\nfunction showNotification(message, type = 'info') {\r\n    // Rimuovi notifiche esistenti\r\n    const existingNotifications = document.querySelectorAll('.notification');\r\n    existingNotifications.forEach(notification => notification.remove());\r\n    \r\n    const notification = document.createElement('div');\r\n    notification.className = `notification notification-${type}`;\r\n    notification.textContent = message;\r\n    \r\n    // Stili per la notifica\r\n    Object.assign(notification.style, {\r\n        position: 'fixed',\r\n        top: '20px',\r\n        right: '20px',\r\n        padding: '1rem 1.5rem',\r\n        borderRadius: '8px',\r\n        color: 'white',\r\n        fontWeight: '600',\r\n        zIndex: '10000',\r\n        maxWidth: '400px',\r\n        boxShadow: '0 4px 12px rgba(0,0,0,0.15)',\r\n        transform: 'translateX(100%)',\r\n        transition: 'transform 0.3s ease'\r\n    });\r\n    \r\n    if (type === 'error') {\r\n        notification.style.backgroundColor = 'var(--accent-danger)';\r\n    } else if (type === 'success') {\r\n        notification.style.backgroundColor = 'var(--accent-secondary)';\r\n    } else {\r\n        notification.style.backgroundColor = 'var(--accent-primary)';\r\n    }\r\n    \r\n    document.body.appendChild(notification);\r\n    \r\n    // Anima l'entrata\r\n    setTimeout(() => {\r\n        notification.style.transform = 'translateX(0)';\r\n    }, 100);\r\n    \r\n    // Rimuovi dopo 5 secondi\r\n    setTimeout(() => {\r\n        notification.style.transform = 'translateX(100%)';\r\n        setTimeout(() => {\r\n            if (notification.parentNode) {\r\n                notification.parentNode.removeChild(notification);\r\n            }\r\n        }, 300);\r\n    }, 5000);\r\n}\r\n\r\n// Aggiungi toggle tema\r\nfunction addThemeToggle() {\r\n    const themeToggle = document.createElement('button');\r\n    themeToggle.className = 'theme-toggle';\r\n    themeToggle.setAttribute('aria-label', 'Cambia tema');\r\n    themeToggle.addEventListener('click', toggleTheme);\r\n    document.body.appendChild(themeToggle);\r\n}\r\n\r\n// Toggle tema\r\nfunction toggleTheme() {\r\n    const currentTheme = document.documentElement.getAttribute('data-theme');\r\n    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';\r\n    \r\n    document.documentElement.setAttribute('data-theme', newTheme);\r\n    localStorage.setItem(CONFIG.THEME_KEY, newTheme);\r\n}\r\n\r\n// Modal per selezione set di studio\r\nfunction showSetSelectionModal(sets) {\r\n    return new Promise((resolve) => {\r\n        // Crea il modal\r\n        const modal = document.createElement('div');\r\n        modal.className = 'modal-overlay';\r\n        modal.style.cssText = `\r\n            position: fixed; top: 0; left: 0; width: 100%; height: 100%;\r\n            background: rgba(0,0,0,0.5); display: flex; align-items: center;\r\n            justify-content: center; z-index: 1000;\r\n        `;\r\n        modal.innerHTML = `\r\n            <div class=\"modal-content\" style=\"\r\n                background: var(--card-bg); border-radius: 12px; padding: 24px;\r\n                max-width: 500px; width: 90%; max-height: 80vh; overflow-y: auto;\r\n                box-shadow: 0 10px 25px rgba(0,0,0,0.2);\r\n            \">\r\n                <div class=\"modal-header\" style=\"display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;\">\r\n                    <h3 style=\"margin: 0; color: var(--text-color);\">Seleziona Set di Studio</h3>\r\n                    <button class=\"modal-close\" style=\"\r\n                        background: none; border: none; font-size: 24px; cursor: pointer;\r\n                        color: var(--text-color); padding: 0; width: 30px; height: 30px;\r\n                    \">&times;</button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <p style=\"color: var(--text-color); margin-bottom: 16px;\">Scegli quale set di flashcard vuoi studiare:</p>\r\n                    <div class=\"set-selection-list\">\r\n                        ${sets.map(set => `\r\n                            <div class=\"set-option\" style=\"\r\n                                border: 1px solid var(--border-color); border-radius: 8px;\r\n                                padding: 16px; margin-bottom: 12px; display: flex;\r\n                                justify-content: space-between; align-items: center;\r\n                                hover: background-color: var(--hover-bg);\r\n                            \">\r\n                                <div class=\"set-info\">\r\n                                    <h4 style=\"margin: 0 0 4px 0; color: var(--text-color);\">${set.name}</h4>\r\n                                    <p style=\"margin: 0 0 8px 0; color: var(--text-secondary); font-size: 14px;\">${set.description || 'Nessuna descrizione'}</p>\r\n                                    <span style=\"font-size: 12px; color: var(--text-secondary);\">${set.total_cards || 0} carte • ${set.subject || 'Generale'}</span>\r\n                                </div>\r\n                                <button class=\"select-set-btn\" data-set-id=\"${set.id}\" style=\"\r\n                                    background: var(--primary-color); color: white; border: none;\r\n                                    padding: 8px 16px; border-radius: 6px; cursor: pointer;\r\n                                    font-size: 14px; font-weight: 500;\r\n                                \">\r\n                                    Seleziona\r\n                                </button>\r\n                            </div>\r\n                        `).join('')}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `;\r\n        \r\n        document.body.appendChild(modal);\r\n        \r\n        // Event listeners\r\n        modal.querySelector('.modal-close').onclick = () => {\r\n            document.body.removeChild(modal);\r\n            resolve(null);\r\n        };\r\n        \r\n        modal.onclick = (e) => {\r\n            if (e.target === modal) {\r\n                document.body.removeChild(modal);\r\n                resolve(null);\r\n            }\r\n        };\r\n        \r\n        modal.querySelectorAll('.select-set-btn').forEach(btn => {\r\n            btn.onclick = () => {\r\n                const setId = btn.dataset.setId;\r\n                const selectedSet = sets.find(set => set.id === setId);\r\n                document.body.removeChild(modal);\r\n                resolve(selectedSet);\r\n            };\r\n        });\r\n    });\r\n}\r\n\r\n// Gestione errori globali\r\nwindow.addEventListener('error', (event) => {\r\n    console.error('Errore globale:', event.error);\r\n    showError('Si è verificato un errore inaspettato. Ricarica la pagina.');\r\n});\r\n\r\n// Gestione errori di rete\r\nwindow.addEventListener('unhandledrejection', (event) => {\r\n    console.error('Promise rejection non gestita:', event.reason);\r\n    showError('Errore di connessione. Verifica la tua connessione internet.');\r\n});\r\n\r\n// Listener per cambiamenti di autenticazione\r\nAuthManager.onAuthStateChange((event, session) => {\r\n    if (event === 'SIGNED_IN') {\r\n        appState.user = session.user;\r\n        showUserInfo();\r\n        loadSavedFlashcards();\r\n        updateStudyStats();\r\n    } else if (event === 'SIGNED_OUT') {\r\n        appState.user = null;\r\n        showLoginForm();\r\n    }\r\n});\r\n\r\n// Esponi funzioni globalmente per compatibilità\r\nwindow.loadSavedSet = loadSavedSet;\r\nwindow.deleteSavedSet = deleteSavedSet;\r\n"],"names":["supabase","createClient","AuthManager","signUp","email","password","data","error","auth","options","emailRedirectTo","window","location","origin","signIn","signInWithPassword","signOut","getCurrentUser","user","getUser","onAuthStateChange","callback","FlashcardManager","createFlashcardSet","name","description","subject","isPublic","Error","from","insert","user_id","id","is_public","select","single","addFlashcards","setId","flashcards","flashcardsToInsert","map","card","index","set_id","question","domanda","answer","risposta","difficulty","order_index","update","total_cards","length","eq","getUserFlashcardSets","order","ascending","getFlashcardSet","deleteFlashcardSet","delete","getPublicFlashcardSets","SpacedRepetition","calculateNext","quality","repetitions","easeFactor","interval","userStats","Object","keys","this","getUserPerformanceStats","penalty","calculatePenalty","Math","max","nextReview","Date","now","getQualityFactor","newInterval","newEaseFactor","min","consistency","personalizationFactor","getPersonalizationFactor","round","calculateDifficulty","recentErrors","avgAccuracy","accuracy","gte","toISOString","split","totalCards","reduce","sum","day","cards_studied","totalCorrect","correct_answers","incorrect_answers","studyDays","avgCardsPerDay","calculateConsistency","calculateRecentErrors","console","filter","slice","recordStudySession","cardId","sessionData","existingSession","newData","ease_factor","interval_days","sessionRecord","card_id","next_review_date","studied_at","response_time","responseTime","study_mode","mode","device_type","deviceType","upsert","onConflict","ignoreDuplicates","updateUserAnalytics","userId","today","existing","fetchError","code","updateData","date","study_time_minutes","duration","updated_at","getCardsForReview","lte","AnalyticsManager","getUserAnalytics","daysBack","rpc","user_uuid","days_back","updateDailyAnalytics","cardsStudied","correctAnswers","studyTimeMinutes","getWeeklyProgress","generateInsights","analytics","insights","study_streak","push","icon","title","accuracy_rate","total_study_time","hours","cards_due_today","total_sets","handleSupabaseError","message","includes","CONFIG","appState","currentIndex","isLoading","apiKey","useCustomApi","answerRevealed","studyMode","studyCards","currentStudyIndex","cardsStudiedToday","studyStartTime","selectedStudyMode","quizData","matchingData","memoryData","speedData","quizScore","matchingScore","memoryScore","speedScore","elements","authSection","document","getElementById","loginForm","userInfo","emailInput","passwordInput","loginBtn","signupBtn","logoutBtn","userEmail","studyModeBtn","analyticsBtn","textInput","pdfInput","pdfInfo","apiChoiceRadios","querySelectorAll","customApiSection","apiKeyInput","saveApiKeyBtn","generateBtn","flashcardSection","flashcardCounter","currentCard","questionText","answerText","answerSection","revealAnswerBtn","hideAnswerBtn","prevBtn","nextBtn","saveSetBtn","exportBtn","copyBtn","analyticsSection","analyticsTimeframe","refreshAnalytics","totalSets","studyStreak","accuracyRate","totalStudyTime","cardsDueToday","weeklyProgressChart","accuracyChart","insightsList","studySection","startStudyBtn","stopStudyBtn","cardsDue","currentStudyMode","studyCard","studyProgress","studyProgressText","studyQuestionText","studyRevealBtn","studyAnswer","studyAnswerText","studyModeCards","studyModeSelector","querySelector","quizMode","quizQuestion","quizOptions","quizFeedback","feedbackIcon","feedbackText","correctAnswer","nextQuizBtn","quizProgress","quizProgressText","matchingMode","matchingGrid","matchingFeedback","matchingFeedbackIcon","matchingFeedbackText","matchingProgress","matchingProgressText","memoryMode","memoryGrid","memoryAttempts","memoryPairs","memoryProgress","memoryProgressText","speedMode","speedQuestion","speedAnswer","speedTimer","revealSpeedAnswer","speedNext","speedProgress","speedProgressText","savedFlashcardsSection","savedSetsGrid","emptySavedSets","refreshSetsBtn","clearAllBtn","exportModal","exportJson","exportCsv","closeModal","saveSetModal","setNameInput","confirmSaveBtn","cancelSaveBtn","showLoginForm","classList","remove","add","apiSection","style","opacity","pointerEvents","tooltip","showUserInfo","textContent","updateUserStats","createElement","className","innerHTML","cssText","appendChild","async","stats","handleLogin","value","trim","showLoading","loadSavedFlashcards","updateStudyStats","showSuccess","showError","handleSignup","handleLogout","handleTextInput","handlePdfUpload","event","file","target","files","type","text","Promise","resolve","reject","reader","FileReader","onload","e","typedarray","Uint8Array","result","pdf","pdfjsLib","getDocument","promise","fullText","i","numPages","page","getPage","getTextContent","items","item","str","join","onerror","readAsArrayBuffer","extractTextFromPdf","size","toFixed","handleApiChoiceChange","useCustom","checked","focus","saveApiKey","localStorage","setItem","generateFlashcards","cardCount","session","getSession","functions","invoke","body","headers","Authorization","access_token","generateFlashcardsWithAI","edgeError","warn","callApi","apiError","showFlashcardSection","updateFlashcardDisplay","apiUrl","requestBody","contents","parts","generationConfig","temperature","topK","topP","maxOutputTokens","response","fetch","method","JSON","stringify","ok","errorData","json","_a","statusText","jsonMatch","candidates","content","match","parse","scrollIntoView","behavior","disabled","toggleAnswer","flashcard","hideAnswer","showPreviousCard","showNextCard","showSaveSetModal","hideSaveSetModal","saveFlashcardSet","setName","setData","setError","toLocaleDateString","cardsError","sets","set","created_at","forEach","btn","addEventListener","loadSavedSet","dataset","deleteSavedSet","selectedStudySet","selectedStudySetId","startStudyFromSet","renderSavedSets","confirm","clearAllSavedSets","total_study_sessions","selectStudyMode","currentTarget","spaced","quiz","matching","memory","speed","startStudyMode","selectedSet","modal","onclick","removeChild","find","generateQuizOptions","prepareQuizData","questions","answers","sort","random","pairs","prepareMatchingData","cards","pairId","prepareMemoryData","prepareSpeedData","loadStudyModeData","showStudyCard","showQuizQuestion","progress","width","questionsColumn","selectMatchingItem","answersColumn","showMatchingGame","memoryCard","flipMemoryCard","showMemoryGame","showSpeedCard","startSpecificStudyMode","allCards","otherAnswers","currentQuiz","endQuizMode","option","optionBtn","selectQuizAnswer","selectedAnswer","isCorrect","nextQuizQuestion","percentage","stopStudyMode","GlobalWorkerOptions","workerSrc","themeToggle","setAttribute","toggleTheme","addThemeToggle","log","initializeApp","showStudyMode","showAnalyticsDashboard","radio","showExportModal","copyFlashcards","exportFlashcards","hideExportModal","key","loadAnalytics","revealStudyAnswer","contains","handleStudyRating","parseInt","nextSpeedCard","savedApiKey","getItem","savedTheme","documentElement","loadSavedData","checkAuthState","selectedMatchingItem","questionItem","answerItem","some","pair","checkMatchingPair","setTimeout","flippedCards","memoryLocked","cardData","card1","card2","endSpeedMode","timeLeft","speedTimerInterval","setInterval","clearInterval","startSpeedTimer","studyTime","session_end","total_time_seconds","showBasicAnalytics","weeklyData","chart","maxCards","d","weekday","updateWeeklyProgressChart","weekly_progress","updateAccuracyChart","insight","navigator","clipboard","writeText","format","filename","mimeType","replace","blob","Blob","url","URL","createObjectURL","a","href","download","click","revokeObjectURL","toUpperCase","show","btnText","spinner","hideProgressIndicator","indicator","updateProgressStep","showProgressIndicator","step","s","showNotification","notification","assign","position","top","right","padding","borderRadius","color","fontWeight","zIndex","maxWidth","boxShadow","transform","transition","backgroundColor","parentNode","newTheme","getAttribute","reason"],"mappings":"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"}